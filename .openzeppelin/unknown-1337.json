{
  "manifestVersion": "3.0",
  "impls": {
    "592fe4fc64de5d406ca7b2b02e4352aa6d9a3d0bf913873c086f7880e0c55c65": {
      "address": "0xDb56f2e9369E0D7bD191099125a3f6C370F8ed15",
      "txHash": "0x6a8bc224992a3a8a661ec81281c33c50e546110cdff642cd96da2080175f4ea9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "XBRTest",
            "label": "DOMAIN_SEPARATOR",
            "type": "t_bytes32",
            "src": "XBRTest.sol:57"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e18ebeb956074e8581b1fdb44bf7364d0ba77aa86079f3a3092c61e8b4512da0": {
      "address": "0x21Ae538B902Cf4C188CF34614db46A51dDc738F4",
      "txHash": "0x4b7bf4bae86e43446ff3eedc2fd6e3be83203ac2f748b3823037649e6248cc99",
      "layout": {
        "storage": [],
        "types": {}
      }
    },
    "4b51e75b4f07040a40d573515b53e2bda8015b412e691d78eb34e005e202fe0c": {
      "address": "0x49549BEd7061CB537D1500f83582105F0F29fD4A",
      "txHash": "0xd24704aae9db74cd18e53345134e18d171d5a88cf32e00d2c37f467a807c0c14",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "XBRToken",
            "label": "INITIAL_SUPPLY",
            "type": "t_uint256",
            "src": "XBRToken.sol:88"
          },
          {
            "contract": "XBRToken",
            "label": "burnedSignatures",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "XBRToken.sol:91"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9fd292e6ca4e6b53b7986053f0443709f73b788b32e41fe35d4d2144fd95efdd": {
      "address": "0xAc341beD089df64F75140CE962983a20668e93b6",
      "txHash": "0x10f8d1c4011c54910ea820c826c057c38bfb94b92e6de97df30ab0c72359ea2e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)13201_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRNetwork",
            "label": "ANYADR",
            "type": "t_address",
            "src": "XBRNetwork.sol:57"
          },
          {
            "contract": "XBRNetwork",
            "label": "PRESIGNED_TXN_MAX_AGE",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:60"
          },
          {
            "contract": "XBRNetwork",
            "label": "verifyingChain",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:63"
          },
          {
            "contract": "XBRNetwork",
            "label": "verifyingContract",
            "type": "t_address",
            "src": "XBRNetwork.sol:66"
          },
          {
            "contract": "XBRNetwork",
            "label": "eula",
            "type": "t_string_storage",
            "src": "XBRNetwork.sol:69"
          },
          {
            "contract": "XBRNetwork",
            "label": "contribution",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:72"
          },
          {
            "contract": "XBRNetwork",
            "label": "token",
            "type": "t_address",
            "src": "XBRNetwork.sol:77"
          },
          {
            "contract": "XBRNetwork",
            "label": "organization",
            "type": "t_address",
            "src": "XBRNetwork.sol:80"
          },
          {
            "contract": "XBRNetwork",
            "label": "members",
            "type": "t_mapping(t_address,t_struct(Member)10917_storage)",
            "src": "XBRNetwork.sol:83"
          },
          {
            "contract": "XBRNetwork",
            "label": "coins",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "XBRNetwork.sol:86"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(Member)10917_storage)": {
            "label": "mapping(address => struct XBRTypes.Member)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)13201_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "42b8e41841ad16994dd0f15b26afe0d632f7279ac26a7d66cb476ef6229cb0ff": {
      "address": "0xF1eB6Bd78F5202677B9eF902AD43B2e9dBD3e444",
      "txHash": "0x36f3ec4a5ed339989db47af8352611408a8b8db4b9c71f08186d1c817958f6b3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)13201_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRDomain",
            "label": "network",
            "type": "t_contract(XBRNetwork)9489",
            "src": "XBRDomain.sol:63"
          },
          {
            "contract": "XBRDomain",
            "label": "license",
            "type": "t_string_storage",
            "src": "XBRDomain.sol:66"
          },
          {
            "contract": "XBRDomain",
            "label": "domainSeq",
            "type": "t_uint32",
            "src": "XBRDomain.sol:69"
          },
          {
            "contract": "XBRDomain",
            "label": "domains",
            "type": "t_mapping(t_bytes16,t_struct(Domain)10939_storage)",
            "src": "XBRDomain.sol:72"
          },
          {
            "contract": "XBRDomain",
            "label": "nodes",
            "type": "t_mapping(t_bytes16,t_struct(Node)10952_storage)",
            "src": "XBRDomain.sol:75"
          },
          {
            "contract": "XBRDomain",
            "label": "nodesByKey",
            "type": "t_mapping(t_bytes32,t_bytes16)",
            "src": "XBRDomain.sol:78"
          },
          {
            "contract": "XBRDomain",
            "label": "domainIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRDomain.sol:81"
          }
        ],
        "types": {
          "t_contract(XBRNetwork)9489": {
            "label": "contract XBRNetwork"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Domain)10939_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Domain)"
          },
          "t_mapping(t_bytes16,t_struct(Node)10952_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Node)"
          },
          "t_mapping(t_bytes32,t_bytes16)": {
            "label": "mapping(bytes32 => bytes16)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)13201_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "373beabb5f948345c98ddbafc909acf498afaf03ec7feff8d19696cfad4a11ba": {
      "address": "0x5fD64798A1624e4856D5de481D30D44727E9D2ee",
      "txHash": "0x2ba5a9f6c9e02b85999568d834279d11f655c0763564a2dba67254c026ccd1bd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)13201_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRCatalog",
            "label": "network",
            "type": "t_contract(XBRNetwork)9489",
            "src": "XBRCatalog.sol:48"
          },
          {
            "contract": "XBRCatalog",
            "label": "catalogSeq",
            "type": "t_uint32",
            "src": "XBRCatalog.sol:51"
          },
          {
            "contract": "XBRCatalog",
            "label": "catalogs",
            "type": "t_mapping(t_bytes16,t_struct(Catalog)11065_storage)",
            "src": "XBRCatalog.sol:54"
          },
          {
            "contract": "XBRCatalog",
            "label": "catalogIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRCatalog.sol:57"
          }
        ],
        "types": {
          "t_contract(XBRNetwork)9489": {
            "label": "contract XBRNetwork"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Catalog)11065_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Catalog)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)13201_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "64a4d434bc75de7c69fed525521db6ca3392aa90b9292308290639f4d581ae2f": {
      "address": "0xECF838070bB3C66754d91A48FF3cd112C839DF02",
      "txHash": "0x6ce90e96097e275df74ae2f4022db0677848e5d2b26817fe68d09ebd9e7f9c0a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)13201_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRMarket",
            "label": "NONCOOPERATIVE_CHANNEL_CLOSE_TIMEOUT",
            "type": "t_uint256",
            "src": "XBRMarket.sol:67"
          },
          {
            "contract": "XBRMarket",
            "label": "network",
            "type": "t_contract(XBRNetwork)9489",
            "src": "XBRMarket.sol:70"
          },
          {
            "contract": "XBRMarket",
            "label": "catalog",
            "type": "t_contract(XBRCatalog)776",
            "src": "XBRMarket.sol:73"
          },
          {
            "contract": "XBRMarket",
            "label": "marketSeq",
            "type": "t_uint32",
            "src": "XBRMarket.sol:76"
          },
          {
            "contract": "XBRMarket",
            "label": "markets",
            "type": "t_mapping(t_bytes16,t_struct(Market)11039_storage)",
            "src": "XBRMarket.sol:79"
          },
          {
            "contract": "XBRMarket",
            "label": "marketIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRMarket.sol:82"
          },
          {
            "contract": "XBRMarket",
            "label": "marketsByMaker",
            "type": "t_mapping(t_address,t_bytes16)",
            "src": "XBRMarket.sol:85"
          },
          {
            "contract": "XBRMarket",
            "label": "marketsByOwner",
            "type": "t_mapping(t_address,t_array(t_bytes16)dyn_storage)",
            "src": "XBRMarket.sol:88"
          },
          {
            "contract": "XBRMarket",
            "label": "marketsByActor",
            "type": "t_mapping(t_address,t_array(t_bytes16)dyn_storage)",
            "src": "XBRMarket.sol:91"
          },
          {
            "contract": "XBRMarket",
            "label": "memberStats",
            "type": "t_mapping(t_address,t_struct(MemberMarketStats)10961_storage)",
            "src": "XBRMarket.sol:94"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(XBRNetwork)9489": {
            "label": "contract XBRNetwork"
          },
          "t_contract(XBRCatalog)776": {
            "label": "contract XBRCatalog"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Market)11039_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Market)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_address,t_bytes16)": {
            "label": "mapping(address => bytes16)"
          },
          "t_mapping(t_address,t_array(t_bytes16)dyn_storage)": {
            "label": "mapping(address => bytes16[])"
          },
          "t_mapping(t_address,t_struct(MemberMarketStats)10961_storage)": {
            "label": "mapping(address => struct XBRTypes.MemberMarketStats)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)13201_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ae08357d0aaca4308bd3776ea56a09f406761b7fb04319c489ebdfb3fd2a710b": {
      "address": "0xBfD96cD4DbcB58736BfD2dd3300A5f376d33b271",
      "txHash": "0x727a5883e9c263af3e7f285c53ef89c403c65093d3130dca52ac7e172e66a0d0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)13201_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRChannel",
            "label": "market",
            "type": "t_contract(XBRMarket)8198",
            "src": "XBRChannel.sol:77"
          },
          {
            "contract": "XBRChannel",
            "label": "channelSeq",
            "type": "t_uint32",
            "src": "XBRChannel.sol:80"
          },
          {
            "contract": "XBRChannel",
            "label": "channels",
            "type": "t_mapping(t_bytes16,t_struct(Channel)11097_storage)",
            "src": "XBRChannel.sol:83"
          },
          {
            "contract": "XBRChannel",
            "label": "channelClosingStates",
            "type": "t_mapping(t_bytes16,t_struct(ChannelClosingState)11116_storage)",
            "src": "XBRChannel.sol:86"
          }
        ],
        "types": {
          "t_contract(XBRMarket)8198": {
            "label": "contract XBRMarket"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Channel)11097_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Channel)"
          },
          "t_mapping(t_bytes16,t_struct(ChannelClosingState)11116_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.ChannelClosingState)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)13201_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a52f24f5cea7952a7ce0c7754786a2ffab370d2e73e10f1df3db159ee9cbc8c2": {
      "address": "0x7F1cAFC08F30b0C86f9d49479308135B7C86c4e4",
      "txHash": "0x6661f7992283669c7bbb1db9fbe82f13a824dd0bd95c8f6ad696e115de0b840c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "XBRTest",
            "label": "DOMAIN_SEPARATOR",
            "type": "t_bytes32",
            "src": "XBRTest.sol:59"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "326cf655e8559a81a3ac6eaf811bca69c140120be4a56a9cb3a2ec9aed5105cb": {
      "address": "0x3F4E941ef5071a1D09C2eB4a24DA1Fc43F76fcfF",
      "txHash": "0x8fcd449fece9763562587b113bde1fd5c39b32e2336c4582cce1a022131f3d1d",
      "layout": {
        "storage": [],
        "types": {}
      }
    },
    "6ea4335e051524918f7a8e587715aa1195aac0d1cdb1f34dd6e9dc458bb8e670": {
      "address": "0xC3Ef4965B788cc4b905084d01F2eb7D4b6E93ABF",
      "txHash": "0x86d9a2cf25f237783adb852d2657d9fd05401417f7962a3de0c0158166c789b5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "XBRToken",
            "label": "INITIAL_SUPPLY",
            "type": "t_uint256",
            "src": "XBRToken.sol:86"
          },
          {
            "contract": "XBRToken",
            "label": "burnedSignatures",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "XBRToken.sol:89"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9642b8b4ea5b723d717092784174166a90beee2d79bfb23b7b8812254c6afb94": {
      "address": "0xb111Ded3F2e4012C0B85D930Fda298693D0DA0B2",
      "txHash": "0xf665ccd989ea545c6867169b52008058a730944d3033c619725402cbbe74da58",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7839_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRNetwork",
            "label": "ANYADR",
            "type": "t_address",
            "src": "XBRNetwork.sol:55"
          },
          {
            "contract": "XBRNetwork",
            "label": "PRESIGNED_TXN_MAX_AGE",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:58"
          },
          {
            "contract": "XBRNetwork",
            "label": "verifyingChain",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:61"
          },
          {
            "contract": "XBRNetwork",
            "label": "verifyingContract",
            "type": "t_address",
            "src": "XBRNetwork.sol:64"
          },
          {
            "contract": "XBRNetwork",
            "label": "eula",
            "type": "t_string_storage",
            "src": "XBRNetwork.sol:67"
          },
          {
            "contract": "XBRNetwork",
            "label": "contribution",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:70"
          },
          {
            "contract": "XBRNetwork",
            "label": "token",
            "type": "t_address",
            "src": "XBRNetwork.sol:75"
          },
          {
            "contract": "XBRNetwork",
            "label": "organization",
            "type": "t_address",
            "src": "XBRNetwork.sol:78"
          },
          {
            "contract": "XBRNetwork",
            "label": "members",
            "type": "t_mapping(t_address,t_struct(Member)6140_storage)",
            "src": "XBRNetwork.sol:81"
          },
          {
            "contract": "XBRNetwork",
            "label": "coins",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "XBRNetwork.sol:84"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(Member)6140_storage)": {
            "label": "mapping(address => struct XBRTypes.Member)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7839_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8af2d55074fe652d07124fb041d66ea05d0e249f40f1093ec2b0e67e1e942f77": {
      "address": "0x393A6a6850e0788e496d73c50a436606e6CcA874",
      "txHash": "0xfd3c9541ef32d43023ca0066f263d1dbfc5eb69496ba76156b12b26ea9939b3e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7839_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRDomain",
            "label": "network",
            "type": "t_contract(XBRNetwork)5317",
            "src": "XBRDomain.sol:61"
          },
          {
            "contract": "XBRDomain",
            "label": "license",
            "type": "t_string_storage",
            "src": "XBRDomain.sol:64"
          },
          {
            "contract": "XBRDomain",
            "label": "domainSeq",
            "type": "t_uint32",
            "src": "XBRDomain.sol:67"
          },
          {
            "contract": "XBRDomain",
            "label": "domains",
            "type": "t_mapping(t_bytes16,t_struct(Domain)6162_storage)",
            "src": "XBRDomain.sol:70"
          },
          {
            "contract": "XBRDomain",
            "label": "nodes",
            "type": "t_mapping(t_bytes16,t_struct(Node)6175_storage)",
            "src": "XBRDomain.sol:73"
          },
          {
            "contract": "XBRDomain",
            "label": "nodesByKey",
            "type": "t_mapping(t_bytes32,t_bytes16)",
            "src": "XBRDomain.sol:76"
          },
          {
            "contract": "XBRDomain",
            "label": "domainIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRDomain.sol:79"
          }
        ],
        "types": {
          "t_contract(XBRNetwork)5317": {
            "label": "contract XBRNetwork"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Domain)6162_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Domain)"
          },
          "t_mapping(t_bytes16,t_struct(Node)6175_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Node)"
          },
          "t_mapping(t_bytes32,t_bytes16)": {
            "label": "mapping(bytes32 => bytes16)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7839_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fa750e69f4a1e945e55482dc9f7010cdd8e4fc5ff91ec89b02c07b0c9243115d": {
      "address": "0x67B5656d60a809915323Bf2C40A8bEF15A152e3e",
      "txHash": "0x9fc22c67ab900351b6855a3dc423364299d55c81c5d67c670313d53b2ffd0860",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7831_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRCatalog",
            "label": "network",
            "type": "t_contract(XBRNetwork)5317",
            "src": "XBRCatalog.sol:46"
          },
          {
            "contract": "XBRCatalog",
            "label": "catalogSeq",
            "type": "t_uint32",
            "src": "XBRCatalog.sol:49"
          },
          {
            "contract": "XBRCatalog",
            "label": "catalogs",
            "type": "t_mapping(t_bytes16,t_struct(Catalog)6182_storage)",
            "src": "XBRCatalog.sol:52"
          },
          {
            "contract": "XBRCatalog",
            "label": "catalogIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRCatalog.sol:55"
          }
        ],
        "types": {
          "t_contract(XBRNetwork)5317": {
            "label": "contract XBRNetwork"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Catalog)6182_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Catalog)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7831_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4885f0d1b0cc6063f766bdbe277a93e669f2b913018622338c3563d26b6fba94": {
      "address": "0xA57B8a5584442B467b4689F1144D269d096A3daF",
      "txHash": "0xe1a6840717c860231c5d359c04e6e64bce5d1cae4bc8e7b6f578295e357c821e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7831_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRMarket",
            "label": "NONCOOPERATIVE_CHANNEL_CLOSE_TIMEOUT",
            "type": "t_uint256",
            "src": "XBRMarket.sol:65"
          },
          {
            "contract": "XBRMarket",
            "label": "network",
            "type": "t_contract(XBRNetwork)5317",
            "src": "XBRMarket.sol:68"
          },
          {
            "contract": "XBRMarket",
            "label": "catalog",
            "type": "t_contract(XBRCatalog)478",
            "src": "XBRMarket.sol:71"
          },
          {
            "contract": "XBRMarket",
            "label": "marketSeq",
            "type": "t_uint32",
            "src": "XBRMarket.sol:74"
          },
          {
            "contract": "XBRMarket",
            "label": "markets",
            "type": "t_mapping(t_bytes16,t_struct(Market)6156_storage)",
            "src": "XBRMarket.sol:77"
          },
          {
            "contract": "XBRMarket",
            "label": "marketIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRMarket.sol:80"
          },
          {
            "contract": "XBRMarket",
            "label": "marketsByMaker",
            "type": "t_mapping(t_address,t_bytes16)",
            "src": "XBRMarket.sol:83"
          },
          {
            "contract": "XBRMarket",
            "label": "marketsByOwner",
            "type": "t_mapping(t_address,t_array(t_bytes16)dyn_storage)",
            "src": "XBRMarket.sol:86"
          },
          {
            "contract": "XBRMarket",
            "label": "marketsByActor",
            "type": "t_mapping(t_address,t_array(t_bytes16)dyn_storage)",
            "src": "XBRMarket.sol:89"
          },
          {
            "contract": "XBRMarket",
            "label": "memberStats",
            "type": "t_mapping(t_address,t_struct(MemberMarketStats)6078_storage)",
            "src": "XBRMarket.sol:92"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(XBRNetwork)5317": {
            "label": "contract XBRNetwork"
          },
          "t_contract(XBRCatalog)478": {
            "label": "contract XBRCatalog"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Market)6156_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Market)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_address,t_bytes16)": {
            "label": "mapping(address => bytes16)"
          },
          "t_mapping(t_address,t_array(t_bytes16)dyn_storage)": {
            "label": "mapping(address => bytes16[])"
          },
          "t_mapping(t_address,t_struct(MemberMarketStats)6078_storage)": {
            "label": "mapping(address => struct XBRTypes.MemberMarketStats)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7831_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9a1af2cfced7b4102a823b08c8d5be5c5bc6a4e84b289a455b5a536ef07fa147": {
      "address": "0xa6f8431C9eEe4Ac2859207aF4004F7a948924c30",
      "txHash": "0xbf22da46fc8c1962b4024f49f3eade5488f45aa2cc5373a342a995b59a9854ab",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7839_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRChannel",
            "label": "market",
            "type": "t_contract(XBRMarket)4652",
            "src": "XBRChannel.sol:75"
          },
          {
            "contract": "XBRChannel",
            "label": "channelSeq",
            "type": "t_uint32",
            "src": "XBRChannel.sol:78"
          },
          {
            "contract": "XBRChannel",
            "label": "channels",
            "type": "t_mapping(t_bytes16,t_struct(Channel)6320_storage)",
            "src": "XBRChannel.sol:81"
          },
          {
            "contract": "XBRChannel",
            "label": "channelClosingStates",
            "type": "t_mapping(t_bytes16,t_struct(ChannelClosingState)6339_storage)",
            "src": "XBRChannel.sol:84"
          }
        ],
        "types": {
          "t_contract(XBRMarket)4652": {
            "label": "contract XBRMarket"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Channel)6320_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Channel)"
          },
          "t_mapping(t_bytes16,t_struct(ChannelClosingState)6339_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.ChannelClosingState)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7839_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e3a78552e3c1e4783369fe5ab043d07ab877234efb034976745b65e8dcceff19": {
      "address": "0x70eE878D560D7E17a986872f54B7C58f564B2784",
      "txHash": "0x8a1150f8b289297c8530944a55c4f8131d2526a935461b4742cfb33616705c3b",
      "layout": {
        "storage": [],
        "types": {}
      }
    },
    "fde2aeb224940b037844d9ebd03806ce5f98236dcd198e4dda6b382836b1d336": {
      "address": "0x40b13914f9886E234E1e00435E76D558FA8cf5ba",
      "txHash": "0x8d38c58d31ba638207e2163e005612b84c7722bf3534e665425d5502e468fbe0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "XBRToken",
            "label": "INITIAL_SUPPLY",
            "type": "t_uint256",
            "src": "XBRToken.sol:86"
          },
          {
            "contract": "XBRToken",
            "label": "burnedSignatures",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "XBRToken.sol:89"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "76d0148fe3b7d32e973a2bed9c6067317d85d96996490dc8fe32df0841b9f4d4": {
      "address": "0x6FdB1c9e1a1A8beD2EE22a3d5E62CA330ee88ecb",
      "txHash": "0x83a8db663b35fa963b9a54bac9c36dd11a72ae6ca6c7b0ea9e6a71c064dbe45d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7757_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRNetwork",
            "label": "ANYADR",
            "type": "t_address",
            "src": "XBRNetwork.sol:55"
          },
          {
            "contract": "XBRNetwork",
            "label": "PRESIGNED_TXN_MAX_AGE",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:58"
          },
          {
            "contract": "XBRNetwork",
            "label": "verifyingChain",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:61"
          },
          {
            "contract": "XBRNetwork",
            "label": "verifyingContract",
            "type": "t_address",
            "src": "XBRNetwork.sol:64"
          },
          {
            "contract": "XBRNetwork",
            "label": "eula",
            "type": "t_string_storage",
            "src": "XBRNetwork.sol:67"
          },
          {
            "contract": "XBRNetwork",
            "label": "contribution",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:70"
          },
          {
            "contract": "XBRNetwork",
            "label": "token",
            "type": "t_address",
            "src": "XBRNetwork.sol:75"
          },
          {
            "contract": "XBRNetwork",
            "label": "organization",
            "type": "t_address",
            "src": "XBRNetwork.sol:78"
          },
          {
            "contract": "XBRNetwork",
            "label": "members",
            "type": "t_mapping(t_address,t_struct(Member)6058_storage)",
            "src": "XBRNetwork.sol:81"
          },
          {
            "contract": "XBRNetwork",
            "label": "coins",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "XBRNetwork.sol:84"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(Member)6058_storage)": {
            "label": "mapping(address => struct XBRTypes.Member)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7757_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f00b71bd5b87eafb6e526efa099a0e2fb0fc2d5400aed9a482eadab7042c8287": {
      "address": "0x97bd553f21B175F7CC00819cC6494a7FbA344180",
      "txHash": "0x58534329c78b4929f1b4b870a6fb1b49bb3fc9494e646cf46cc6f2197e230b21",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7757_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRDomain",
            "label": "network",
            "type": "t_contract(XBRNetwork)5317",
            "src": "XBRDomain.sol:61"
          },
          {
            "contract": "XBRDomain",
            "label": "license",
            "type": "t_string_storage",
            "src": "XBRDomain.sol:64"
          },
          {
            "contract": "XBRDomain",
            "label": "domainSeq",
            "type": "t_uint32",
            "src": "XBRDomain.sol:67"
          },
          {
            "contract": "XBRDomain",
            "label": "domains",
            "type": "t_mapping(t_bytes16,t_struct(Domain)6080_storage)",
            "src": "XBRDomain.sol:70"
          },
          {
            "contract": "XBRDomain",
            "label": "nodes",
            "type": "t_mapping(t_bytes16,t_struct(Node)6093_storage)",
            "src": "XBRDomain.sol:73"
          },
          {
            "contract": "XBRDomain",
            "label": "nodesByKey",
            "type": "t_mapping(t_bytes32,t_bytes16)",
            "src": "XBRDomain.sol:76"
          },
          {
            "contract": "XBRDomain",
            "label": "domainIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRDomain.sol:79"
          }
        ],
        "types": {
          "t_contract(XBRNetwork)5317": {
            "label": "contract XBRNetwork"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Domain)6080_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Domain)"
          },
          "t_mapping(t_bytes16,t_struct(Node)6093_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Node)"
          },
          "t_mapping(t_bytes32,t_bytes16)": {
            "label": "mapping(bytes32 => bytes16)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7757_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b2f102e309721d55f55cf6d4cba93d54462940fcdb868d5bf3b54c39c4612c71": {
      "address": "0xD8d315932b5c5b9B21B14A39f5F12e4b9Bd65571",
      "txHash": "0x873009f885b4fe38eaf8c6387a80721a8bdaada8012e10defccae4f27f42e72a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7757_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRCatalog",
            "label": "network",
            "type": "t_contract(XBRNetwork)5317",
            "src": "XBRCatalog.sol:46"
          },
          {
            "contract": "XBRCatalog",
            "label": "catalogSeq",
            "type": "t_uint32",
            "src": "XBRCatalog.sol:49"
          },
          {
            "contract": "XBRCatalog",
            "label": "catalogs",
            "type": "t_mapping(t_bytes16,t_struct(Catalog)6206_storage)",
            "src": "XBRCatalog.sol:52"
          },
          {
            "contract": "XBRCatalog",
            "label": "catalogIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRCatalog.sol:55"
          }
        ],
        "types": {
          "t_contract(XBRNetwork)5317": {
            "label": "contract XBRNetwork"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Catalog)6206_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Catalog)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7757_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0df7681aaf1d3660c006bdb0b37c2f6c5cdd45567683b18961ab1c24c7dd1bf8": {
      "address": "0xFA64858C14345C0a3aD805E0da64900C4d7ec5e6",
      "txHash": "0x52ecbfb009e2abdae5ab4a9f2476f8b71ffd10caa092dfa68014955bc44dd310",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7757_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRChannel",
            "label": "market",
            "type": "t_contract(XBRMarket)4652",
            "src": "XBRChannel.sol:75"
          },
          {
            "contract": "XBRChannel",
            "label": "channelSeq",
            "type": "t_uint32",
            "src": "XBRChannel.sol:78"
          },
          {
            "contract": "XBRChannel",
            "label": "channels",
            "type": "t_mapping(t_bytes16,t_struct(Channel)6238_storage)",
            "src": "XBRChannel.sol:81"
          },
          {
            "contract": "XBRChannel",
            "label": "channelClosingStates",
            "type": "t_mapping(t_bytes16,t_struct(ChannelClosingState)6257_storage)",
            "src": "XBRChannel.sol:84"
          }
        ],
        "types": {
          "t_contract(XBRMarket)4652": {
            "label": "contract XBRMarket"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Channel)6238_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Channel)"
          },
          "t_mapping(t_bytes16,t_struct(ChannelClosingState)6257_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.ChannelClosingState)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7757_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a21965662415871371362ea8e49ed90f70761fe1f1ec3ff8b542a606d5ce8b41": {
      "address": "0xcF7F9472FAB9372b34D96FbE1B57966B13951dbf",
      "txHash": "0xdf44162cb9d1f0f13b82a1af1703cc216959c4812b3b370d6983dd6213aba062",
      "layout": {
        "storage": [],
        "types": {}
      }
    },
    "a8f558c5948e3a97252800d7b09aa5c8f5a35980b5f43487d1c6f667aad66394": {
      "address": "0xE39caEcB7ed0E02194727aA60cF5d8A0fc6b273c",
      "txHash": "0xd5242849077b9479a2718a3ba3ccee2e24a72db9a07ce36721ab1e01077949f3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "XBRToken",
            "label": "INITIAL_SUPPLY",
            "type": "t_uint256",
            "src": "XBRToken.sol:86"
          },
          {
            "contract": "XBRToken",
            "label": "burnedSignatures",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "XBRToken.sol:89"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b61af11e55701a3cfb287eaeea4e7f132ab66c3ef604f3ec9dfa58a6355b010e": {
      "address": "0xFd8643CeE37DaE121Ca0E84FD2Ceeb49E828B493",
      "txHash": "0xa4f7e5b4d2b2651774d8fa773af569aa7bf433fc91a0b44097cc42254200bcd4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7777_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRNetwork",
            "label": "ANYADR",
            "type": "t_address",
            "src": "XBRNetwork.sol:55"
          },
          {
            "contract": "XBRNetwork",
            "label": "PRESIGNED_TXN_MAX_AGE",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:58"
          },
          {
            "contract": "XBRNetwork",
            "label": "verifyingChain",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:61"
          },
          {
            "contract": "XBRNetwork",
            "label": "verifyingContract",
            "type": "t_address",
            "src": "XBRNetwork.sol:64"
          },
          {
            "contract": "XBRNetwork",
            "label": "eula",
            "type": "t_string_storage",
            "src": "XBRNetwork.sol:67"
          },
          {
            "contract": "XBRNetwork",
            "label": "contribution",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:70"
          },
          {
            "contract": "XBRNetwork",
            "label": "token",
            "type": "t_address",
            "src": "XBRNetwork.sol:75"
          },
          {
            "contract": "XBRNetwork",
            "label": "organization",
            "type": "t_address",
            "src": "XBRNetwork.sol:78"
          },
          {
            "contract": "XBRNetwork",
            "label": "members",
            "type": "t_mapping(t_address,t_struct(Member)6078_storage)",
            "src": "XBRNetwork.sol:81"
          },
          {
            "contract": "XBRNetwork",
            "label": "coins",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "XBRNetwork.sol:84"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(Member)6078_storage)": {
            "label": "mapping(address => struct XBRTypes.Member)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7777_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e602eee165dd9d5fec1723f047e2337ab59239f1c1e2e5aadeb8e4ce2f163070": {
      "address": "0x9095b8e8a5a4E7Fcb7F569dDc325eAB089732B26",
      "txHash": "0x9c999ee4633fce95388c9bd5eb96044326221d54c6a57a91383967e056996fc1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7777_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRDomain",
            "label": "network",
            "type": "t_contract(XBRNetwork)5317",
            "src": "XBRDomain.sol:61"
          },
          {
            "contract": "XBRDomain",
            "label": "license",
            "type": "t_string_storage",
            "src": "XBRDomain.sol:64"
          },
          {
            "contract": "XBRDomain",
            "label": "domainSeq",
            "type": "t_uint32",
            "src": "XBRDomain.sol:67"
          },
          {
            "contract": "XBRDomain",
            "label": "domains",
            "type": "t_mapping(t_bytes16,t_struct(Domain)6100_storage)",
            "src": "XBRDomain.sol:70"
          },
          {
            "contract": "XBRDomain",
            "label": "nodes",
            "type": "t_mapping(t_bytes16,t_struct(Node)6113_storage)",
            "src": "XBRDomain.sol:73"
          },
          {
            "contract": "XBRDomain",
            "label": "nodesByKey",
            "type": "t_mapping(t_bytes32,t_bytes16)",
            "src": "XBRDomain.sol:76"
          },
          {
            "contract": "XBRDomain",
            "label": "domainIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRDomain.sol:79"
          }
        ],
        "types": {
          "t_contract(XBRNetwork)5317": {
            "label": "contract XBRNetwork"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Domain)6100_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Domain)"
          },
          "t_mapping(t_bytes16,t_struct(Node)6113_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Node)"
          },
          "t_mapping(t_bytes32,t_bytes16)": {
            "label": "mapping(bytes32 => bytes16)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7777_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ad9c37fc7f76397eab9bc154a40b8593cb54a6f7055e6756421690ca7cfc3b50": {
      "address": "0x0a8c20aadDDDF50AFD1d431342Aaf28E4e757884",
      "txHash": "0x77c59466621ba0f747f9e5b53160ba4855d31a719a87c23c04769fc703063b23",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7777_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRChannel",
            "label": "market",
            "type": "t_contract(XBRMarket)4652",
            "src": "XBRChannel.sol:75"
          },
          {
            "contract": "XBRChannel",
            "label": "channelSeq",
            "type": "t_uint32",
            "src": "XBRChannel.sol:78"
          },
          {
            "contract": "XBRChannel",
            "label": "channels",
            "type": "t_mapping(t_bytes16,t_struct(Channel)6258_storage)",
            "src": "XBRChannel.sol:81"
          },
          {
            "contract": "XBRChannel",
            "label": "channelClosingStates",
            "type": "t_mapping(t_bytes16,t_struct(ChannelClosingState)6277_storage)",
            "src": "XBRChannel.sol:84"
          }
        ],
        "types": {
          "t_contract(XBRMarket)4652": {
            "label": "contract XBRMarket"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Channel)6258_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Channel)"
          },
          "t_mapping(t_bytes16,t_struct(ChannelClosingState)6277_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.ChannelClosingState)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7777_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4d4fedb4026745a01f07549d549a49b5764ff776e035ead3cf8b87ad91f604db": {
      "address": "0x1932400a9A132D20c3961E2848DE4bA3Ce8Ff30B",
      "txHash": "0x1241a0d1333cf9bbc2c16b895b7337ac4f40b5917cdd87f905f695244dd83390",
      "layout": {
        "storage": [],
        "types": {}
      }
    },
    "b4a1ebccd1a3923a2ff43eb7c3bb271b0b328c73a4b3e60a4bce43631d953d35": {
      "address": "0x467fD9FEA4e77AC79504a23B45631D29e42eaa4A",
      "txHash": "0x22b7e357e6b829e10fbeea92d15c6042fc58c1680df4cdb2435ab09bb35a735d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "XBRToken",
            "label": "INITIAL_SUPPLY",
            "type": "t_uint256",
            "src": "XBRToken.sol:86"
          },
          {
            "contract": "XBRToken",
            "label": "burnedSignatures",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "XBRToken.sol:89"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "835f9f521be40bb369063d4add401678c12e27120320246258895536d587cfba": {
      "address": "0xE4B293636F4b10c9cBD8E798B80A75bba71a90cE",
      "txHash": "0x2835cf45881bdb91b4f759611e792fc4d04bfefb99ecda91fce11f889549a42d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7768_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRNetwork",
            "label": "ANYADR",
            "type": "t_address",
            "src": "XBRNetwork.sol:55"
          },
          {
            "contract": "XBRNetwork",
            "label": "PRESIGNED_TXN_MAX_AGE",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:58"
          },
          {
            "contract": "XBRNetwork",
            "label": "verifyingChain",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:61"
          },
          {
            "contract": "XBRNetwork",
            "label": "verifyingContract",
            "type": "t_address",
            "src": "XBRNetwork.sol:64"
          },
          {
            "contract": "XBRNetwork",
            "label": "eula",
            "type": "t_string_storage",
            "src": "XBRNetwork.sol:67"
          },
          {
            "contract": "XBRNetwork",
            "label": "contribution",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:70"
          },
          {
            "contract": "XBRNetwork",
            "label": "token",
            "type": "t_address",
            "src": "XBRNetwork.sol:75"
          },
          {
            "contract": "XBRNetwork",
            "label": "organization",
            "type": "t_address",
            "src": "XBRNetwork.sol:78"
          },
          {
            "contract": "XBRNetwork",
            "label": "members",
            "type": "t_mapping(t_address,t_struct(Member)6069_storage)",
            "src": "XBRNetwork.sol:81"
          },
          {
            "contract": "XBRNetwork",
            "label": "coins",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "XBRNetwork.sol:84"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(Member)6069_storage)": {
            "label": "mapping(address => struct XBRTypes.Member)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7768_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "952727dd5241d511663193367300f65ad5daa8dd70745ffe633aaca7a90a529e": {
      "address": "0x3B2d33aC0B76462c8Eb58548ed7db68BC826F15E",
      "txHash": "0x63a7edebaaf82adcdc860cbe59cd5d5f72867921bceca5a802ff286aa17d115f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7768_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRDomain",
            "label": "network",
            "type": "t_contract(XBRNetwork)5317",
            "src": "XBRDomain.sol:61"
          },
          {
            "contract": "XBRDomain",
            "label": "license",
            "type": "t_string_storage",
            "src": "XBRDomain.sol:64"
          },
          {
            "contract": "XBRDomain",
            "label": "domainSeq",
            "type": "t_uint32",
            "src": "XBRDomain.sol:67"
          },
          {
            "contract": "XBRDomain",
            "label": "domains",
            "type": "t_mapping(t_bytes16,t_struct(Domain)6091_storage)",
            "src": "XBRDomain.sol:70"
          },
          {
            "contract": "XBRDomain",
            "label": "nodes",
            "type": "t_mapping(t_bytes16,t_struct(Node)6104_storage)",
            "src": "XBRDomain.sol:73"
          },
          {
            "contract": "XBRDomain",
            "label": "nodesByKey",
            "type": "t_mapping(t_bytes32,t_bytes16)",
            "src": "XBRDomain.sol:76"
          },
          {
            "contract": "XBRDomain",
            "label": "domainIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRDomain.sol:79"
          }
        ],
        "types": {
          "t_contract(XBRNetwork)5317": {
            "label": "contract XBRNetwork"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Domain)6091_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Domain)"
          },
          "t_mapping(t_bytes16,t_struct(Node)6104_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Node)"
          },
          "t_mapping(t_bytes32,t_bytes16)": {
            "label": "mapping(bytes32 => bytes16)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7768_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ac93b463bd602de6e52f05ab0b723d1c10d7f7f568563ced529a59108bb4c712": {
      "address": "0xe00b745b5e71337507d43a8584320c4192CA7994",
      "txHash": "0xdb53845415e0ff51ac534f1cc5d8f61fa4d49903bbce57b5f61e28d5a672ddff",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7768_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRCatalog",
            "label": "network",
            "type": "t_contract(XBRNetwork)5317",
            "src": "XBRCatalog.sol:46"
          },
          {
            "contract": "XBRCatalog",
            "label": "catalogSeq",
            "type": "t_uint32",
            "src": "XBRCatalog.sol:49"
          },
          {
            "contract": "XBRCatalog",
            "label": "catalogs",
            "type": "t_mapping(t_bytes16,t_struct(Catalog)6217_storage)",
            "src": "XBRCatalog.sol:52"
          },
          {
            "contract": "XBRCatalog",
            "label": "catalogIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRCatalog.sol:55"
          }
        ],
        "types": {
          "t_contract(XBRNetwork)5317": {
            "label": "contract XBRNetwork"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Catalog)6217_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Catalog)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7768_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7127565f403f9843131ecd6392ca533f7e9d4a1f7d81ee3504a4852d0aa21bab": {
      "address": "0x92472cBcfc8E6dB1806374d543a140d49f83D7b5",
      "txHash": "0xfba4a66246ad50bdfb36e80cfb60e85191293b123ea7a39ffdb04d7fe5da33e0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7768_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRChannel",
            "label": "market",
            "type": "t_contract(XBRMarket)4652",
            "src": "XBRChannel.sol:75"
          },
          {
            "contract": "XBRChannel",
            "label": "channelSeq",
            "type": "t_uint32",
            "src": "XBRChannel.sol:78"
          },
          {
            "contract": "XBRChannel",
            "label": "channels",
            "type": "t_mapping(t_bytes16,t_struct(Channel)6249_storage)",
            "src": "XBRChannel.sol:81"
          },
          {
            "contract": "XBRChannel",
            "label": "channelClosingStates",
            "type": "t_mapping(t_bytes16,t_struct(ChannelClosingState)6268_storage)",
            "src": "XBRChannel.sol:84"
          }
        ],
        "types": {
          "t_contract(XBRMarket)4652": {
            "label": "contract XBRMarket"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Channel)6249_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Channel)"
          },
          "t_mapping(t_bytes16,t_struct(ChannelClosingState)6268_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.ChannelClosingState)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7768_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "22880b3e2eddcb5ed205cb701deb74378ce58a4b537cf02222d193eb33495871": {
      "address": "0xF3Ecf410c2f4EF71691F63E409300f85c16c4f33",
      "txHash": "0x0eff5c8da5ae738cba24eaa5739b26c8ee9c1f5492bc30c63735fd3d3de6543d",
      "layout": {
        "storage": [],
        "types": {}
      }
    },
    "a7617d84a6ac4db3074accc0221e3577cb01750704ddcc55dbc89439a46b0b60": {
      "address": "0x18c07E395Df250003f439F6e8ea1Ea8Aa51752c6",
      "txHash": "0x0969928a798bb9280336c2d6cde84469aedc2487de0fd43480f29599cc1d3d8c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "XBRToken",
            "label": "verifyingChain",
            "type": "t_uint256",
            "src": "XBRToken.sol:76"
          },
          {
            "contract": "XBRToken",
            "label": "verifyingContract",
            "type": "t_address",
            "src": "XBRToken.sol:79"
          },
          {
            "contract": "XBRToken",
            "label": "EIP712_DOMAIN_TYPEHASH",
            "type": "t_bytes32",
            "src": "XBRToken.sol:82"
          },
          {
            "contract": "XBRToken",
            "label": "EIP712_APPROVE_TYPEHASH",
            "type": "t_bytes32",
            "src": "XBRToken.sol:85"
          },
          {
            "contract": "XBRToken",
            "label": "INITIAL_SUPPLY",
            "type": "t_uint256",
            "src": "XBRToken.sol:88"
          },
          {
            "contract": "XBRToken",
            "label": "burnedSignatures",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "XBRToken.sol:91"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "37acf1b55ab0a5db3c67610fc51bad363ef8fd99df045dd214c8e84e454276fa": {
      "address": "0x97681569c1007380DEc7075E5aCb6020Be36eC83",
      "txHash": "0x251f6ba306a6b06c987c30131cef501ea073c31a820430519df0af2389085f11",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7786_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRNetwork",
            "label": "ANYADR",
            "type": "t_address",
            "src": "XBRNetwork.sol:55"
          },
          {
            "contract": "XBRNetwork",
            "label": "PRESIGNED_TXN_MAX_AGE",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:58"
          },
          {
            "contract": "XBRNetwork",
            "label": "verifyingChain",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:61"
          },
          {
            "contract": "XBRNetwork",
            "label": "verifyingContract",
            "type": "t_address",
            "src": "XBRNetwork.sol:64"
          },
          {
            "contract": "XBRNetwork",
            "label": "eula",
            "type": "t_string_storage",
            "src": "XBRNetwork.sol:67"
          },
          {
            "contract": "XBRNetwork",
            "label": "contribution",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:70"
          },
          {
            "contract": "XBRNetwork",
            "label": "token",
            "type": "t_address",
            "src": "XBRNetwork.sol:75"
          },
          {
            "contract": "XBRNetwork",
            "label": "organization",
            "type": "t_address",
            "src": "XBRNetwork.sol:78"
          },
          {
            "contract": "XBRNetwork",
            "label": "members",
            "type": "t_mapping(t_address,t_struct(Member)6087_storage)",
            "src": "XBRNetwork.sol:81"
          },
          {
            "contract": "XBRNetwork",
            "label": "coins",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "XBRNetwork.sol:84"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(Member)6087_storage)": {
            "label": "mapping(address => struct XBRTypes.Member)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7786_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e72ca0306c68a79101cc806c03b77222c013a5c9cc78285b4982eb3003108cde": {
      "address": "0x0DB24A927FFC3622884B7A3B6f1C694ED8092A01",
      "txHash": "0x483a878f78df93a3c04d8b889bb4c1d0c0a709944db4520d7f4b80f4fc1f2187",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7786_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRDomain",
            "label": "network",
            "type": "t_contract(XBRNetwork)5317",
            "src": "XBRDomain.sol:61"
          },
          {
            "contract": "XBRDomain",
            "label": "license",
            "type": "t_string_storage",
            "src": "XBRDomain.sol:64"
          },
          {
            "contract": "XBRDomain",
            "label": "domainSeq",
            "type": "t_uint32",
            "src": "XBRDomain.sol:67"
          },
          {
            "contract": "XBRDomain",
            "label": "domains",
            "type": "t_mapping(t_bytes16,t_struct(Domain)6109_storage)",
            "src": "XBRDomain.sol:70"
          },
          {
            "contract": "XBRDomain",
            "label": "nodes",
            "type": "t_mapping(t_bytes16,t_struct(Node)6122_storage)",
            "src": "XBRDomain.sol:73"
          },
          {
            "contract": "XBRDomain",
            "label": "nodesByKey",
            "type": "t_mapping(t_bytes32,t_bytes16)",
            "src": "XBRDomain.sol:76"
          },
          {
            "contract": "XBRDomain",
            "label": "domainIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRDomain.sol:79"
          }
        ],
        "types": {
          "t_contract(XBRNetwork)5317": {
            "label": "contract XBRNetwork"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Domain)6109_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Domain)"
          },
          "t_mapping(t_bytes16,t_struct(Node)6122_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Node)"
          },
          "t_mapping(t_bytes32,t_bytes16)": {
            "label": "mapping(bytes32 => bytes16)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7786_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ab478dcdd4aaf272948d4be5846489ec9378b144e552ea365951d265bf975ad4": {
      "address": "0xC8d87fdd2896E0a1cAb382322075FDAD7526c8D2",
      "txHash": "0x57f92a445f7e2b633b5758021b6d8815cba800b20b6244003fa78a905289bdde",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7786_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRCatalog",
            "label": "network",
            "type": "t_contract(XBRNetwork)5317",
            "src": "XBRCatalog.sol:46"
          },
          {
            "contract": "XBRCatalog",
            "label": "catalogSeq",
            "type": "t_uint32",
            "src": "XBRCatalog.sol:49"
          },
          {
            "contract": "XBRCatalog",
            "label": "catalogs",
            "type": "t_mapping(t_bytes16,t_struct(Catalog)6235_storage)",
            "src": "XBRCatalog.sol:52"
          },
          {
            "contract": "XBRCatalog",
            "label": "catalogIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRCatalog.sol:55"
          }
        ],
        "types": {
          "t_contract(XBRNetwork)5317": {
            "label": "contract XBRNetwork"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Catalog)6235_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Catalog)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7786_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "05bb029c4f264e9dfcc5e7cc4abe68ae3097146fbb462cb3bb790ce9460a9684": {
      "address": "0x352ebD84619597F4ec3d18Bea793143eAa2f4c46",
      "txHash": "0x8dc85cbbdc58e03550cebdd70ec4e92a8e9160702d02cdbd7998aef896049e3c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7786_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRChannel",
            "label": "market",
            "type": "t_contract(XBRMarket)4652",
            "src": "XBRChannel.sol:75"
          },
          {
            "contract": "XBRChannel",
            "label": "channelSeq",
            "type": "t_uint32",
            "src": "XBRChannel.sol:78"
          },
          {
            "contract": "XBRChannel",
            "label": "channels",
            "type": "t_mapping(t_bytes16,t_struct(Channel)6267_storage)",
            "src": "XBRChannel.sol:81"
          },
          {
            "contract": "XBRChannel",
            "label": "channelClosingStates",
            "type": "t_mapping(t_bytes16,t_struct(ChannelClosingState)6286_storage)",
            "src": "XBRChannel.sol:84"
          }
        ],
        "types": {
          "t_contract(XBRMarket)4652": {
            "label": "contract XBRMarket"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Channel)6267_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Channel)"
          },
          "t_mapping(t_bytes16,t_struct(ChannelClosingState)6286_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.ChannelClosingState)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7786_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8a01624e878cfd10b96bbb5dc8dd2853cb24e3b84a91f7f185e16957680db1de": {
      "address": "0xf2362FB814015A95ffe5E6C0BE51359803ede1cA",
      "txHash": "0x9dc8cb7f80288362da5a61d60ae26aa9d45f07b3f6254f0acc140077da02a259",
      "layout": {
        "storage": [],
        "types": {}
      }
    },
    "024aee4c8db1f3129641ed373522ce717f1d890680fac593ffc0b1d5738085d5": {
      "address": "0x82b79c961EE10faAdAaFC0b9bD74d6EE8048032E",
      "txHash": "0xb5a612a94247e0f227cb34aaf96aa334bf01070c94af0e079e1c2c4254560b64",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "XBRToken",
            "label": "verifyingChain",
            "type": "t_uint256",
            "src": "XBRToken.sol:76"
          },
          {
            "contract": "XBRToken",
            "label": "verifyingContract",
            "type": "t_address",
            "src": "XBRToken.sol:79"
          },
          {
            "contract": "XBRToken",
            "label": "EIP712_DOMAIN_TYPEHASH",
            "type": "t_bytes32",
            "src": "XBRToken.sol:82"
          },
          {
            "contract": "XBRToken",
            "label": "EIP712_APPROVE_TYPEHASH",
            "type": "t_bytes32",
            "src": "XBRToken.sol:85"
          },
          {
            "contract": "XBRToken",
            "label": "INITIAL_SUPPLY",
            "type": "t_uint256",
            "src": "XBRToken.sol:88"
          },
          {
            "contract": "XBRToken",
            "label": "burnedSignatures",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "XBRToken.sol:91"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a0a194d05190e815d53a72768630d46e64bda7cfb76577e95e4d79e4b5025bd6": {
      "address": "0x83aE7312372356d9cC1b61061218B51945596A1A",
      "txHash": "0x1faa6db50a717b8d1ae88a7807e8631793af4a77aba44c58872e241a4ee35636",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7795_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRNetwork",
            "label": "ANYADR",
            "type": "t_address",
            "src": "XBRNetwork.sol:55"
          },
          {
            "contract": "XBRNetwork",
            "label": "PRESIGNED_TXN_MAX_AGE",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:58"
          },
          {
            "contract": "XBRNetwork",
            "label": "verifyingChain",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:61"
          },
          {
            "contract": "XBRNetwork",
            "label": "verifyingContract",
            "type": "t_address",
            "src": "XBRNetwork.sol:64"
          },
          {
            "contract": "XBRNetwork",
            "label": "eula",
            "type": "t_string_storage",
            "src": "XBRNetwork.sol:67"
          },
          {
            "contract": "XBRNetwork",
            "label": "contribution",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:70"
          },
          {
            "contract": "XBRNetwork",
            "label": "token",
            "type": "t_address",
            "src": "XBRNetwork.sol:75"
          },
          {
            "contract": "XBRNetwork",
            "label": "organization",
            "type": "t_address",
            "src": "XBRNetwork.sol:78"
          },
          {
            "contract": "XBRNetwork",
            "label": "members",
            "type": "t_mapping(t_address,t_struct(Member)6096_storage)",
            "src": "XBRNetwork.sol:81"
          },
          {
            "contract": "XBRNetwork",
            "label": "coins",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "XBRNetwork.sol:84"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(Member)6096_storage)": {
            "label": "mapping(address => struct XBRTypes.Member)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7795_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9c7a059648dd72e3438459390d0dc7f94ec774fff476b0dd27ac931862196d14": {
      "address": "0x11e4791AA19e51Ed8D2A7cE6037628ef082e8c54",
      "txHash": "0x25290339467a3acd1f3e7960ee44080a4febb9d65f0207cf4c5a2515ca9c9a35",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7795_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRDomain",
            "label": "network",
            "type": "t_contract(XBRNetwork)5317",
            "src": "XBRDomain.sol:61"
          },
          {
            "contract": "XBRDomain",
            "label": "license",
            "type": "t_string_storage",
            "src": "XBRDomain.sol:64"
          },
          {
            "contract": "XBRDomain",
            "label": "domainSeq",
            "type": "t_uint32",
            "src": "XBRDomain.sol:67"
          },
          {
            "contract": "XBRDomain",
            "label": "domains",
            "type": "t_mapping(t_bytes16,t_struct(Domain)6118_storage)",
            "src": "XBRDomain.sol:70"
          },
          {
            "contract": "XBRDomain",
            "label": "nodes",
            "type": "t_mapping(t_bytes16,t_struct(Node)6131_storage)",
            "src": "XBRDomain.sol:73"
          },
          {
            "contract": "XBRDomain",
            "label": "nodesByKey",
            "type": "t_mapping(t_bytes32,t_bytes16)",
            "src": "XBRDomain.sol:76"
          },
          {
            "contract": "XBRDomain",
            "label": "domainIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRDomain.sol:79"
          }
        ],
        "types": {
          "t_contract(XBRNetwork)5317": {
            "label": "contract XBRNetwork"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Domain)6118_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Domain)"
          },
          "t_mapping(t_bytes16,t_struct(Node)6131_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Node)"
          },
          "t_mapping(t_bytes32,t_bytes16)": {
            "label": "mapping(bytes32 => bytes16)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7795_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "41ab47fed299e0d348a5508d5ef1a325e247b0e16a984d7cc6a39329699b971e": {
      "address": "0xe00d70A79F562Ef4AD9a2B491f90ecEBf8cB7D40",
      "txHash": "0xd74aa9ae1c73aec1b02e0bbf098f24dfb0fd70cf5012075f702a1a5a4428c719",
      "layout": {
        "storage": [],
        "types": {}
      }
    },
    "dd987a073eb5209744200f5d94843550b79b83d546e163d6c10fa0bda6f663ee": {
      "address": "0x89c320c75520777AB36f4924cE57c65960370fE1",
      "txHash": "0xad156cddafc6aa7ca503da18025c4d2ac195297942c17f47c5304dc3780174b9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "XBRToken",
            "label": "verifyingChain",
            "type": "t_uint256",
            "src": "XBRToken.sol:76"
          },
          {
            "contract": "XBRToken",
            "label": "verifyingContract",
            "type": "t_address",
            "src": "XBRToken.sol:79"
          },
          {
            "contract": "XBRToken",
            "label": "EIP712_DOMAIN_TYPEHASH",
            "type": "t_bytes32",
            "src": "XBRToken.sol:82"
          },
          {
            "contract": "XBRToken",
            "label": "EIP712_APPROVE_TYPEHASH",
            "type": "t_bytes32",
            "src": "XBRToken.sol:85"
          },
          {
            "contract": "XBRToken",
            "label": "INITIAL_SUPPLY",
            "type": "t_uint256",
            "src": "XBRToken.sol:88"
          },
          {
            "contract": "XBRToken",
            "label": "burnedSignatures",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "XBRToken.sol:91"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "721e7c591a98c2f473ce2ebf59291aa8536dd4017af7e0c76887bbc950491a09": {
      "address": "0x070a69230a08B93807c43a96327ff091aE7fC04D",
      "txHash": "0xaf442c2c5743c458dc705fa2ad15d99a842133d13da7d3d9a71ad0c319cc78a1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7875_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRNetwork",
            "label": "ANYADR",
            "type": "t_address",
            "src": "XBRNetwork.sol:55"
          },
          {
            "contract": "XBRNetwork",
            "label": "PRESIGNED_TXN_MAX_AGE",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:58"
          },
          {
            "contract": "XBRNetwork",
            "label": "verifyingChain",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:61"
          },
          {
            "contract": "XBRNetwork",
            "label": "verifyingContract",
            "type": "t_address",
            "src": "XBRNetwork.sol:64"
          },
          {
            "contract": "XBRNetwork",
            "label": "eula",
            "type": "t_string_storage",
            "src": "XBRNetwork.sol:67"
          },
          {
            "contract": "XBRNetwork",
            "label": "contribution",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:70"
          },
          {
            "contract": "XBRNetwork",
            "label": "token",
            "type": "t_address",
            "src": "XBRNetwork.sol:75"
          },
          {
            "contract": "XBRNetwork",
            "label": "organization",
            "type": "t_address",
            "src": "XBRNetwork.sol:78"
          },
          {
            "contract": "XBRNetwork",
            "label": "members",
            "type": "t_mapping(t_address,t_struct(Member)6176_storage)",
            "src": "XBRNetwork.sol:81"
          },
          {
            "contract": "XBRNetwork",
            "label": "coins",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "XBRNetwork.sol:84"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(Member)6176_storage)": {
            "label": "mapping(address => struct XBRTypes.Member)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7875_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a38e615ca2bd489bbbb38e0d46912855d5aa7d84f0e597382856dc2d0f4d0d15": {
      "address": "0xE9809Eb4231EE76963842A4cd8c89bD06dF5F09E",
      "txHash": "0x39749f4ceec908a2452024147f1a4a017cbeec5cd408b898c0ae692d5842eb4a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7875_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRDomain",
            "label": "network",
            "type": "t_contract(XBRNetwork)5317",
            "src": "XBRDomain.sol:61"
          },
          {
            "contract": "XBRDomain",
            "label": "license",
            "type": "t_string_storage",
            "src": "XBRDomain.sol:64"
          },
          {
            "contract": "XBRDomain",
            "label": "domainSeq",
            "type": "t_uint32",
            "src": "XBRDomain.sol:67"
          },
          {
            "contract": "XBRDomain",
            "label": "domains",
            "type": "t_mapping(t_bytes16,t_struct(Domain)6198_storage)",
            "src": "XBRDomain.sol:70"
          },
          {
            "contract": "XBRDomain",
            "label": "nodes",
            "type": "t_mapping(t_bytes16,t_struct(Node)6211_storage)",
            "src": "XBRDomain.sol:73"
          },
          {
            "contract": "XBRDomain",
            "label": "nodesByKey",
            "type": "t_mapping(t_bytes32,t_bytes16)",
            "src": "XBRDomain.sol:76"
          },
          {
            "contract": "XBRDomain",
            "label": "domainIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRDomain.sol:79"
          }
        ],
        "types": {
          "t_contract(XBRNetwork)5317": {
            "label": "contract XBRNetwork"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Domain)6198_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Domain)"
          },
          "t_mapping(t_bytes16,t_struct(Node)6211_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Node)"
          },
          "t_mapping(t_bytes32,t_bytes16)": {
            "label": "mapping(bytes32 => bytes16)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7875_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5cb0a686a079751d0b085c293b9cb95740aca16f0df3a6124ec98ded54705894": {
      "address": "0xAE3b465F19Bf5B0B2ef94A1acFd41b412b1D36b2",
      "txHash": "0x5e949135279bd62b9105b14cd3fdbfbfa964a569f1a26d9d07c58d9f54591e84",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7875_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRChannel",
            "label": "market",
            "type": "t_contract(XBRMarket)4652",
            "src": "XBRChannel.sol:75"
          },
          {
            "contract": "XBRChannel",
            "label": "channelSeq",
            "type": "t_uint32",
            "src": "XBRChannel.sol:78"
          },
          {
            "contract": "XBRChannel",
            "label": "channels",
            "type": "t_mapping(t_bytes16,t_struct(Channel)6356_storage)",
            "src": "XBRChannel.sol:81"
          },
          {
            "contract": "XBRChannel",
            "label": "channelClosingStates",
            "type": "t_mapping(t_bytes16,t_struct(ChannelClosingState)6375_storage)",
            "src": "XBRChannel.sol:84"
          }
        ],
        "types": {
          "t_contract(XBRMarket)4652": {
            "label": "contract XBRMarket"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Channel)6356_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Channel)"
          },
          "t_mapping(t_bytes16,t_struct(ChannelClosingState)6375_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.ChannelClosingState)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7875_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f4c4abc388795022e6a1d5f3b8b222e9834c3542842b7c581eebb5d70c1a3b02": {
      "address": "0xbF5b1e4C21Fb2fd9075cAE924f4C4Fa9BC9fa486",
      "txHash": "0x04cf58a3d53e38ede6b752c6ec66245e20791002ae38f29accf09d18b849e2f6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "XBRToken",
            "label": "verifyingChain",
            "type": "t_uint256",
            "src": "XBRToken.sol:76"
          },
          {
            "contract": "XBRToken",
            "label": "verifyingContract",
            "type": "t_address",
            "src": "XBRToken.sol:79"
          },
          {
            "contract": "XBRToken",
            "label": "EIP712_DOMAIN_TYPEHASH",
            "type": "t_bytes32",
            "src": "XBRToken.sol:82"
          },
          {
            "contract": "XBRToken",
            "label": "EIP712_APPROVE_TYPEHASH",
            "type": "t_bytes32",
            "src": "XBRToken.sol:85"
          },
          {
            "contract": "XBRToken",
            "label": "INITIAL_SUPPLY",
            "type": "t_uint256",
            "src": "XBRToken.sol:88"
          },
          {
            "contract": "XBRToken",
            "label": "burnedSignatures",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "XBRToken.sol:91"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "358b01b4bf2883ce1415c39884642cb64f397c8f4bf7c855d645434bdc667743": {
      "address": "0x02C5eC798a712ABaB289D63cc24474Fb464d383a",
      "txHash": "0x2f9b9df0c8b347b8dcbecc0102d80e732870bc78694475810008e22d00089fdb",
      "layout": {
        "storage": [],
        "types": {}
      }
    },
    "cffd868d6d46639b9e3970299ac1d2409898dbdc84dcd36e8712767326a8903f": {
      "address": "0x8165644fC264BB3c4E24C49ECD15a1DA63b72912",
      "txHash": "0xff8a020006df6d2f6a4d43eba6f865e80770b27aff1ae8f8de1f58364171e9dc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "XBRToken",
            "label": "verifyingChain",
            "type": "t_uint256",
            "src": "XBRToken.sol:76"
          },
          {
            "contract": "XBRToken",
            "label": "verifyingContract",
            "type": "t_address",
            "src": "XBRToken.sol:79"
          },
          {
            "contract": "XBRToken",
            "label": "EIP712_DOMAIN_TYPEHASH",
            "type": "t_bytes32",
            "src": "XBRToken.sol:82"
          },
          {
            "contract": "XBRToken",
            "label": "EIP712_APPROVE_TYPEHASH",
            "type": "t_bytes32",
            "src": "XBRToken.sol:85"
          },
          {
            "contract": "XBRToken",
            "label": "INITIAL_SUPPLY",
            "type": "t_uint256",
            "src": "XBRToken.sol:88"
          },
          {
            "contract": "XBRToken",
            "label": "burnedSignatures",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "XBRToken.sol:91"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7388b5f7808b17128e7885a49c98ee72675752eed6ac377b6c3100236306c248": {
      "address": "0x0a3732f4c5E09f1969c272b95c672aD140D241A4",
      "txHash": "0x89330974b8edc7de9afc3f8464d032586a2d47000291c91365014b1e4a946098",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7819_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRDomain",
            "label": "network",
            "type": "t_contract(XBRNetwork)5317",
            "src": "XBRDomain.sol:61"
          },
          {
            "contract": "XBRDomain",
            "label": "license",
            "type": "t_string_storage",
            "src": "XBRDomain.sol:64"
          },
          {
            "contract": "XBRDomain",
            "label": "domainSeq",
            "type": "t_uint32",
            "src": "XBRDomain.sol:67"
          },
          {
            "contract": "XBRDomain",
            "label": "domains",
            "type": "t_mapping(t_bytes16,t_struct(Domain)6142_storage)",
            "src": "XBRDomain.sol:70"
          },
          {
            "contract": "XBRDomain",
            "label": "nodes",
            "type": "t_mapping(t_bytes16,t_struct(Node)6155_storage)",
            "src": "XBRDomain.sol:73"
          },
          {
            "contract": "XBRDomain",
            "label": "nodesByKey",
            "type": "t_mapping(t_bytes32,t_bytes16)",
            "src": "XBRDomain.sol:76"
          },
          {
            "contract": "XBRDomain",
            "label": "domainIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRDomain.sol:79"
          }
        ],
        "types": {
          "t_contract(XBRNetwork)5317": {
            "label": "contract XBRNetwork"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Domain)6142_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Domain)"
          },
          "t_mapping(t_bytes16,t_struct(Node)6155_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Node)"
          },
          "t_mapping(t_bytes32,t_bytes16)": {
            "label": "mapping(bytes32 => bytes16)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7819_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8ed15f31e74eb801c08434f44771bf2383e6eebfc7bb11af8f0cf1369da1dd29": {
      "address": "0x57E1B587B11D0170c351322862F20406B965D95d",
      "txHash": "0xd7d4dd9f1f6ee22051019c4e1b45b32276329aa10275b828accce6a2d23ddddf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7819_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRChannel",
            "label": "market",
            "type": "t_contract(XBRMarket)4652",
            "src": "XBRChannel.sol:75"
          },
          {
            "contract": "XBRChannel",
            "label": "channelSeq",
            "type": "t_uint32",
            "src": "XBRChannel.sol:78"
          },
          {
            "contract": "XBRChannel",
            "label": "channels",
            "type": "t_mapping(t_bytes16,t_struct(Channel)6300_storage)",
            "src": "XBRChannel.sol:81"
          },
          {
            "contract": "XBRChannel",
            "label": "channelClosingStates",
            "type": "t_mapping(t_bytes16,t_struct(ChannelClosingState)6319_storage)",
            "src": "XBRChannel.sol:84"
          }
        ],
        "types": {
          "t_contract(XBRMarket)4652": {
            "label": "contract XBRMarket"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Channel)6300_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Channel)"
          },
          "t_mapping(t_bytes16,t_struct(ChannelClosingState)6319_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.ChannelClosingState)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7819_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "bd6e5d373c80f89015f0a70490c60050fc536bab4f482ac8182032ab5bd1098f": {
      "address": "0x69E66638C43B4B8491a06482805f660327219903",
      "txHash": "0xe82b1d4551af687fe528fec4f8eea04802447a436e78a225b1b3c1fb439e1e9b",
      "layout": {
        "storage": [],
        "types": {}
      }
    },
    "53775dc3cb8330d79725e339c0ff8d3bf53ff074ac319904c41a4f5b2dba77ed": {
      "address": "0xb4B16bB5C54716241fbeff4982E0bCe48717b857",
      "txHash": "0x86fa385b41bcc4c78bc7cfc66f1c806bcd9787b465abc064a2bec1e54957c7a9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "XBRToken",
            "label": "verifyingChain",
            "type": "t_uint256",
            "src": "XBRToken.sol:76"
          },
          {
            "contract": "XBRToken",
            "label": "verifyingContract",
            "type": "t_address",
            "src": "XBRToken.sol:79"
          },
          {
            "contract": "XBRToken",
            "label": "EIP712_DOMAIN_TYPEHASH",
            "type": "t_bytes32",
            "src": "XBRToken.sol:82"
          },
          {
            "contract": "XBRToken",
            "label": "EIP712_APPROVE_TYPEHASH",
            "type": "t_bytes32",
            "src": "XBRToken.sol:85"
          },
          {
            "contract": "XBRToken",
            "label": "INITIAL_SUPPLY",
            "type": "t_uint256",
            "src": "XBRToken.sol:88"
          },
          {
            "contract": "XBRToken",
            "label": "burnedSignatures",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "XBRToken.sol:91"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8b779935360b6055e3d516d9ba8dd32053f3a1f3f472f0c5516c5f2ad4966d04": {
      "address": "0x19B1Bac2ccDcdd59796E39c15ff820359a1Ef0b5",
      "txHash": "0xc1bbd05515a96ea3cc254b0eaab704747301986992ed53b679536b8849531985",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7828_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRDomain",
            "label": "network",
            "type": "t_contract(XBRNetwork)5317",
            "src": "XBRDomain.sol:61"
          },
          {
            "contract": "XBRDomain",
            "label": "license",
            "type": "t_string_storage",
            "src": "XBRDomain.sol:64"
          },
          {
            "contract": "XBRDomain",
            "label": "domainSeq",
            "type": "t_uint32",
            "src": "XBRDomain.sol:67"
          },
          {
            "contract": "XBRDomain",
            "label": "domains",
            "type": "t_mapping(t_bytes16,t_struct(Domain)6151_storage)",
            "src": "XBRDomain.sol:70"
          },
          {
            "contract": "XBRDomain",
            "label": "nodes",
            "type": "t_mapping(t_bytes16,t_struct(Node)6164_storage)",
            "src": "XBRDomain.sol:73"
          },
          {
            "contract": "XBRDomain",
            "label": "nodesByKey",
            "type": "t_mapping(t_bytes32,t_bytes16)",
            "src": "XBRDomain.sol:76"
          },
          {
            "contract": "XBRDomain",
            "label": "domainIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRDomain.sol:79"
          }
        ],
        "types": {
          "t_contract(XBRNetwork)5317": {
            "label": "contract XBRNetwork"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Domain)6151_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Domain)"
          },
          "t_mapping(t_bytes16,t_struct(Node)6164_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Node)"
          },
          "t_mapping(t_bytes32,t_bytes16)": {
            "label": "mapping(bytes32 => bytes16)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7828_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "60e9e9b3b489d4d7050b11b190dfcc784a2fe2668ab2101a5a0b33a72d3aafdf": {
      "address": "0x184344F2dE1c2028041144B8ecd8D23f06924Fdc",
      "txHash": "0xa38c40d41af1b83bc555ecb4cb6267eac94db167f849af1ae0528e6172ee51c7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7828_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRChannel",
            "label": "market",
            "type": "t_contract(XBRMarket)4652",
            "src": "XBRChannel.sol:75"
          },
          {
            "contract": "XBRChannel",
            "label": "channelSeq",
            "type": "t_uint32",
            "src": "XBRChannel.sol:78"
          },
          {
            "contract": "XBRChannel",
            "label": "channels",
            "type": "t_mapping(t_bytes16,t_struct(Channel)6309_storage)",
            "src": "XBRChannel.sol:81"
          },
          {
            "contract": "XBRChannel",
            "label": "channelClosingStates",
            "type": "t_mapping(t_bytes16,t_struct(ChannelClosingState)6328_storage)",
            "src": "XBRChannel.sol:84"
          }
        ],
        "types": {
          "t_contract(XBRMarket)4652": {
            "label": "contract XBRMarket"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Channel)6309_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Channel)"
          },
          "t_mapping(t_bytes16,t_struct(ChannelClosingState)6328_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.ChannelClosingState)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7828_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "df786dd4bddbedb132663e8497385037cda4e723f677ceb6983649ed0fb814a1": {
      "address": "0xF4601D1192580840c4321f64832407cFFB4C7955",
      "txHash": "0x1ba554fe7e95531b13da59ad4d4d77bed258aac8bc965d1fdb973f1efeac1b07",
      "layout": {
        "storage": [],
        "types": {}
      }
    },
    "2c66bfd64e9d520f569ada26d8e86adf9a1caa430acaf49c9ed7f32df1495326": {
      "address": "0xe4E2293e879c5b3A1b3bDc593Cf61802C22532c5",
      "txHash": "0x5db22080ae2ccd043f543b0fd48bf42afa2e6b1906d968751d0db885c5218611",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "XBRToken",
            "label": "verifyingChain",
            "type": "t_uint256",
            "src": "XBRToken.sol:76"
          },
          {
            "contract": "XBRToken",
            "label": "verifyingContract",
            "type": "t_address",
            "src": "XBRToken.sol:79"
          },
          {
            "contract": "XBRToken",
            "label": "EIP712_DOMAIN_TYPEHASH",
            "type": "t_bytes32",
            "src": "XBRToken.sol:82"
          },
          {
            "contract": "XBRToken",
            "label": "EIP712_APPROVE_TYPEHASH",
            "type": "t_bytes32",
            "src": "XBRToken.sol:85"
          },
          {
            "contract": "XBRToken",
            "label": "INITIAL_SUPPLY",
            "type": "t_uint256",
            "src": "XBRToken.sol:88"
          },
          {
            "contract": "XBRToken",
            "label": "burnedSignatures",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "XBRToken.sol:91"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "96c274ddfabde03ee3c5e3508055ac817125b47054a5c8e5b56e53baa485fa5e": {
      "address": "0x3E4eEf888e2AAF84c0Bbe369b30cB99f31B7999D",
      "txHash": "0x0947d78deab0ff5b83fe18692ae59f498087d8836e0de805b724b71944c34eed",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7856_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRDomain",
            "label": "network",
            "type": "t_contract(XBRNetwork)5317",
            "src": "XBRDomain.sol:61"
          },
          {
            "contract": "XBRDomain",
            "label": "license",
            "type": "t_string_storage",
            "src": "XBRDomain.sol:64"
          },
          {
            "contract": "XBRDomain",
            "label": "domainSeq",
            "type": "t_uint32",
            "src": "XBRDomain.sol:67"
          },
          {
            "contract": "XBRDomain",
            "label": "domains",
            "type": "t_mapping(t_bytes16,t_struct(Domain)6179_storage)",
            "src": "XBRDomain.sol:70"
          },
          {
            "contract": "XBRDomain",
            "label": "nodes",
            "type": "t_mapping(t_bytes16,t_struct(Node)6192_storage)",
            "src": "XBRDomain.sol:73"
          },
          {
            "contract": "XBRDomain",
            "label": "nodesByKey",
            "type": "t_mapping(t_bytes32,t_bytes16)",
            "src": "XBRDomain.sol:76"
          },
          {
            "contract": "XBRDomain",
            "label": "domainIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRDomain.sol:79"
          }
        ],
        "types": {
          "t_contract(XBRNetwork)5317": {
            "label": "contract XBRNetwork"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Domain)6179_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Domain)"
          },
          "t_mapping(t_bytes16,t_struct(Node)6192_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Node)"
          },
          "t_mapping(t_bytes32,t_bytes16)": {
            "label": "mapping(bytes32 => bytes16)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7856_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "61d0456c1002f701d8c2644cb836f15345ff22eaaa4e2ee736588ad1431129bc": {
      "address": "0x395F52D798a8Bd88eB649f6BFeD21Cae0d07123E",
      "txHash": "0x61442f33c498cfba882fd45f8b5986053150894b6179cc23a16559e77d6bba55",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7856_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRCatalog",
            "label": "network",
            "type": "t_contract(XBRNetwork)5317",
            "src": "XBRCatalog.sol:46"
          },
          {
            "contract": "XBRCatalog",
            "label": "catalogSeq",
            "type": "t_uint32",
            "src": "XBRCatalog.sol:49"
          },
          {
            "contract": "XBRCatalog",
            "label": "catalogs",
            "type": "t_mapping(t_bytes16,t_struct(Catalog)6305_storage)",
            "src": "XBRCatalog.sol:52"
          },
          {
            "contract": "XBRCatalog",
            "label": "catalogIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRCatalog.sol:55"
          }
        ],
        "types": {
          "t_contract(XBRNetwork)5317": {
            "label": "contract XBRNetwork"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Catalog)6305_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Catalog)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7856_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f557132aea1b95bf65c165f8d1948014a3a67d1fb0ffc55802a41e1a5608c451": {
      "address": "0xab0a464a85FBC742d8778cDE35DfB7397724c90e",
      "txHash": "0xf7bb04e4c798c8f03a08b23265108ea9f29a439e4428531e0f91b62e4f2a6358",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7856_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRChannel",
            "label": "market",
            "type": "t_contract(XBRMarket)4652",
            "src": "XBRChannel.sol:75"
          },
          {
            "contract": "XBRChannel",
            "label": "channelSeq",
            "type": "t_uint32",
            "src": "XBRChannel.sol:78"
          },
          {
            "contract": "XBRChannel",
            "label": "channels",
            "type": "t_mapping(t_bytes16,t_struct(Channel)6337_storage)",
            "src": "XBRChannel.sol:81"
          },
          {
            "contract": "XBRChannel",
            "label": "channelClosingStates",
            "type": "t_mapping(t_bytes16,t_struct(ChannelClosingState)6356_storage)",
            "src": "XBRChannel.sol:84"
          }
        ],
        "types": {
          "t_contract(XBRMarket)4652": {
            "label": "contract XBRMarket"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Channel)6337_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Channel)"
          },
          "t_mapping(t_bytes16,t_struct(ChannelClosingState)6356_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.ChannelClosingState)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7856_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "807df3d9866711e25e646448806c2d61ddfc9f59be74dfda05afb3ef617714ba": {
      "address": "0x6FF16d7EBfCA1a17F897FC48e5350503fD88a55b",
      "txHash": "0xa727cfa57d8e5b76caba3e9343f881e5db7f2f51953f8760d24a5ea63697791e",
      "layout": {
        "storage": [],
        "types": {}
      }
    },
    "08d1f000255ebaa19929c1014969465f6801c50b5f32872acc18be7934fb1560": {
      "address": "0xc29E3640eE95F0AdDC950D7677504d63670de99e",
      "txHash": "0xd17620baf4134f7b5fe3f584c490e1838067c7be876b0162ddbd30734c1679a7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "XBRToken",
            "label": "verifyingChain",
            "type": "t_uint256",
            "src": "XBRToken.sol:76"
          },
          {
            "contract": "XBRToken",
            "label": "verifyingContract",
            "type": "t_address",
            "src": "XBRToken.sol:79"
          },
          {
            "contract": "XBRToken",
            "label": "EIP712_DOMAIN_TYPEHASH",
            "type": "t_bytes32",
            "src": "XBRToken.sol:82"
          },
          {
            "contract": "XBRToken",
            "label": "EIP712_APPROVE_TYPEHASH",
            "type": "t_bytes32",
            "src": "XBRToken.sol:85"
          },
          {
            "contract": "XBRToken",
            "label": "INITIAL_SUPPLY",
            "type": "t_uint256",
            "src": "XBRToken.sol:88"
          },
          {
            "contract": "XBRToken",
            "label": "burnedSignatures",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "XBRToken.sol:91"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "bc0a1f26456c7a5882d570807bd83fb4c98f775c95641c1037685f6951b2bdce": {
      "address": "0x27699c3De6Da324ADB6efB565D317e331aAD49fc",
      "txHash": "0xcd409d94ee60fa6acfbfa11e316aa4886e0ea060495e749104b14b8fed99b777",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7894_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRChannel",
            "label": "market",
            "type": "t_contract(XBRMarket)4652",
            "src": "XBRChannel.sol:75"
          },
          {
            "contract": "XBRChannel",
            "label": "channelSeq",
            "type": "t_uint32",
            "src": "XBRChannel.sol:78"
          },
          {
            "contract": "XBRChannel",
            "label": "channels",
            "type": "t_mapping(t_bytes16,t_struct(Channel)6375_storage)",
            "src": "XBRChannel.sol:81"
          },
          {
            "contract": "XBRChannel",
            "label": "channelClosingStates",
            "type": "t_mapping(t_bytes16,t_struct(ChannelClosingState)6394_storage)",
            "src": "XBRChannel.sol:84"
          }
        ],
        "types": {
          "t_contract(XBRMarket)4652": {
            "label": "contract XBRMarket"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Channel)6375_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Channel)"
          },
          "t_mapping(t_bytes16,t_struct(ChannelClosingState)6394_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.ChannelClosingState)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7894_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8c82c354f3b37b65519815b72ce065ea9f75af229821e052a5e4756e004ba7fb": {
      "address": "0xCfEB869F69431e42cdB54A4F4f105C19C080A601",
      "txHash": "0xec46de6a167ed72b040093c877f0273eff52c491a6e9f4ba9c7552ee9baf149e",
      "layout": {
        "storage": [],
        "types": {}
      }
    },
    "685136dea13e7e23af875c3a8e4409dcd05abe205df662ff550985bef29c8096": {
      "address": "0xD833215cBcc3f914bD1C9ece3EE7BF8B14f841bb",
      "txHash": "0xee7a1ebcebd22e33b341c606eb2ea7e981b62dc1388c4825cdff291707c2ff55",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "XBRToken",
            "label": "verifyingChain",
            "type": "t_uint256",
            "src": "XBRToken.sol:58"
          },
          {
            "contract": "XBRToken",
            "label": "verifyingContract",
            "type": "t_address",
            "src": "XBRToken.sol:61"
          },
          {
            "contract": "XBRToken",
            "label": "INITIAL_SUPPLY",
            "type": "t_uint256",
            "src": "XBRToken.sol:64"
          },
          {
            "contract": "XBRToken",
            "label": "burnedSignatures",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "XBRToken.sol:67"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3ac3b0eeabc625b79839dbf9daacc696bca14990cc3eb8ee228da4b2b0385bc1": {
      "address": "0xe982E462b094850F12AF94d21D470e21bE9D0E9C",
      "txHash": "0x6ab42ca2fd766bdc5c9172657977e3a5c6da55aee79a3d2d31cafb9dd355d89e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7831_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRNetwork",
            "label": "ANYADR",
            "type": "t_address",
            "src": "XBRNetwork.sol:55"
          },
          {
            "contract": "XBRNetwork",
            "label": "PRESIGNED_TXN_MAX_AGE",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:58"
          },
          {
            "contract": "XBRNetwork",
            "label": "verifyingChain",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:61"
          },
          {
            "contract": "XBRNetwork",
            "label": "verifyingContract",
            "type": "t_address",
            "src": "XBRNetwork.sol:64"
          },
          {
            "contract": "XBRNetwork",
            "label": "eula",
            "type": "t_string_storage",
            "src": "XBRNetwork.sol:67"
          },
          {
            "contract": "XBRNetwork",
            "label": "contribution",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:70"
          },
          {
            "contract": "XBRNetwork",
            "label": "token",
            "type": "t_address",
            "src": "XBRNetwork.sol:75"
          },
          {
            "contract": "XBRNetwork",
            "label": "organization",
            "type": "t_address",
            "src": "XBRNetwork.sol:78"
          },
          {
            "contract": "XBRNetwork",
            "label": "members",
            "type": "t_mapping(t_address,t_struct(Member)6034_storage)",
            "src": "XBRNetwork.sol:81"
          },
          {
            "contract": "XBRNetwork",
            "label": "coins",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "XBRNetwork.sol:84"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(Member)6034_storage)": {
            "label": "mapping(address => struct XBRTypes.Member)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7831_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "41c6bdff593b217ecdaabe4b01fa01aafeb9ed28f13fbe38b5edd459508f0607": {
      "address": "0x0290FB167208Af455bB137780163b7B7a9a10C16",
      "txHash": "0xe1c75d1be6b9ff2eff969545e59eb1cf3f4e538c6108abce2a161eb8bf3a69fd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7831_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRDomain",
            "label": "network",
            "type": "t_contract(XBRNetwork)5317",
            "src": "XBRDomain.sol:61"
          },
          {
            "contract": "XBRDomain",
            "label": "license",
            "type": "t_string_storage",
            "src": "XBRDomain.sol:64"
          },
          {
            "contract": "XBRDomain",
            "label": "domainSeq",
            "type": "t_uint32",
            "src": "XBRDomain.sol:67"
          },
          {
            "contract": "XBRDomain",
            "label": "domains",
            "type": "t_mapping(t_bytes16,t_struct(Domain)6056_storage)",
            "src": "XBRDomain.sol:70"
          },
          {
            "contract": "XBRDomain",
            "label": "nodes",
            "type": "t_mapping(t_bytes16,t_struct(Node)6069_storage)",
            "src": "XBRDomain.sol:73"
          },
          {
            "contract": "XBRDomain",
            "label": "nodesByKey",
            "type": "t_mapping(t_bytes32,t_bytes16)",
            "src": "XBRDomain.sol:76"
          },
          {
            "contract": "XBRDomain",
            "label": "domainIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRDomain.sol:79"
          }
        ],
        "types": {
          "t_contract(XBRNetwork)5317": {
            "label": "contract XBRNetwork"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Domain)6056_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Domain)"
          },
          "t_mapping(t_bytes16,t_struct(Node)6069_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Node)"
          },
          "t_mapping(t_bytes32,t_bytes16)": {
            "label": "mapping(bytes32 => bytes16)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7831_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c5f59f7e2ba05b89060f9dc07c6377db8dd951d2ef18b040ecc9bd1add0d61ed": {
      "address": "0x630589690929E9cdEFDeF0734717a9eF3Ec7Fcfe",
      "txHash": "0x9e7a8bc5ea475f4e6f5c52b410034b53b56d7d1bb8b03e846e9216d6fc650c0e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7831_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRChannel",
            "label": "market",
            "type": "t_contract(XBRMarket)4652",
            "src": "XBRChannel.sol:75"
          },
          {
            "contract": "XBRChannel",
            "label": "channelSeq",
            "type": "t_uint32",
            "src": "XBRChannel.sol:78"
          },
          {
            "contract": "XBRChannel",
            "label": "channels",
            "type": "t_mapping(t_bytes16,t_struct(Channel)6214_storage)",
            "src": "XBRChannel.sol:81"
          },
          {
            "contract": "XBRChannel",
            "label": "channelClosingStates",
            "type": "t_mapping(t_bytes16,t_struct(ChannelClosingState)6233_storage)",
            "src": "XBRChannel.sol:84"
          }
        ],
        "types": {
          "t_contract(XBRMarket)4652": {
            "label": "contract XBRMarket"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Channel)6214_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Channel)"
          },
          "t_mapping(t_bytes16,t_struct(ChannelClosingState)6233_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.ChannelClosingState)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7831_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0x254dffcd3277C0b1660F6d42EFbB754edaBAbC2B",
    "txHash": "0x5e0d62ebb39b5e8e2e2c5a63a590068d8c9d7396fa3424a608ced8a68358bdef"
  }
}
