{
  "manifestVersion": "3.0",
  "impls": {
    "592fe4fc64de5d406ca7b2b02e4352aa6d9a3d0bf913873c086f7880e0c55c65": {
      "address": "0xDb56f2e9369E0D7bD191099125a3f6C370F8ed15",
      "txHash": "0x6a8bc224992a3a8a661ec81281c33c50e546110cdff642cd96da2080175f4ea9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "XBRTest",
            "label": "DOMAIN_SEPARATOR",
            "type": "t_bytes32",
            "src": "XBRTest.sol:57"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e18ebeb956074e8581b1fdb44bf7364d0ba77aa86079f3a3092c61e8b4512da0": {
      "address": "0x21Ae538B902Cf4C188CF34614db46A51dDc738F4",
      "txHash": "0x4b7bf4bae86e43446ff3eedc2fd6e3be83203ac2f748b3823037649e6248cc99",
      "layout": {
        "storage": [],
        "types": {}
      }
    },
    "4b51e75b4f07040a40d573515b53e2bda8015b412e691d78eb34e005e202fe0c": {
      "address": "0x49549BEd7061CB537D1500f83582105F0F29fD4A",
      "txHash": "0xd24704aae9db74cd18e53345134e18d171d5a88cf32e00d2c37f467a807c0c14",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "XBRToken",
            "label": "INITIAL_SUPPLY",
            "type": "t_uint256",
            "src": "XBRToken.sol:88"
          },
          {
            "contract": "XBRToken",
            "label": "burnedSignatures",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "XBRToken.sol:91"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9fd292e6ca4e6b53b7986053f0443709f73b788b32e41fe35d4d2144fd95efdd": {
      "address": "0xAc341beD089df64F75140CE962983a20668e93b6",
      "txHash": "0x10f8d1c4011c54910ea820c826c057c38bfb94b92e6de97df30ab0c72359ea2e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)13201_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRNetwork",
            "label": "ANYADR",
            "type": "t_address",
            "src": "XBRNetwork.sol:57"
          },
          {
            "contract": "XBRNetwork",
            "label": "PRESIGNED_TXN_MAX_AGE",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:60"
          },
          {
            "contract": "XBRNetwork",
            "label": "verifyingChain",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:63"
          },
          {
            "contract": "XBRNetwork",
            "label": "verifyingContract",
            "type": "t_address",
            "src": "XBRNetwork.sol:66"
          },
          {
            "contract": "XBRNetwork",
            "label": "eula",
            "type": "t_string_storage",
            "src": "XBRNetwork.sol:69"
          },
          {
            "contract": "XBRNetwork",
            "label": "contribution",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:72"
          },
          {
            "contract": "XBRNetwork",
            "label": "token",
            "type": "t_address",
            "src": "XBRNetwork.sol:77"
          },
          {
            "contract": "XBRNetwork",
            "label": "organization",
            "type": "t_address",
            "src": "XBRNetwork.sol:80"
          },
          {
            "contract": "XBRNetwork",
            "label": "members",
            "type": "t_mapping(t_address,t_struct(Member)10917_storage)",
            "src": "XBRNetwork.sol:83"
          },
          {
            "contract": "XBRNetwork",
            "label": "coins",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "XBRNetwork.sol:86"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(Member)10917_storage)": {
            "label": "mapping(address => struct XBRTypes.Member)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)13201_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "42b8e41841ad16994dd0f15b26afe0d632f7279ac26a7d66cb476ef6229cb0ff": {
      "address": "0xF1eB6Bd78F5202677B9eF902AD43B2e9dBD3e444",
      "txHash": "0x36f3ec4a5ed339989db47af8352611408a8b8db4b9c71f08186d1c817958f6b3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)13201_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRDomain",
            "label": "network",
            "type": "t_contract(XBRNetwork)9489",
            "src": "XBRDomain.sol:63"
          },
          {
            "contract": "XBRDomain",
            "label": "license",
            "type": "t_string_storage",
            "src": "XBRDomain.sol:66"
          },
          {
            "contract": "XBRDomain",
            "label": "domainSeq",
            "type": "t_uint32",
            "src": "XBRDomain.sol:69"
          },
          {
            "contract": "XBRDomain",
            "label": "domains",
            "type": "t_mapping(t_bytes16,t_struct(Domain)10939_storage)",
            "src": "XBRDomain.sol:72"
          },
          {
            "contract": "XBRDomain",
            "label": "nodes",
            "type": "t_mapping(t_bytes16,t_struct(Node)10952_storage)",
            "src": "XBRDomain.sol:75"
          },
          {
            "contract": "XBRDomain",
            "label": "nodesByKey",
            "type": "t_mapping(t_bytes32,t_bytes16)",
            "src": "XBRDomain.sol:78"
          },
          {
            "contract": "XBRDomain",
            "label": "domainIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRDomain.sol:81"
          }
        ],
        "types": {
          "t_contract(XBRNetwork)9489": {
            "label": "contract XBRNetwork"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Domain)10939_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Domain)"
          },
          "t_mapping(t_bytes16,t_struct(Node)10952_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Node)"
          },
          "t_mapping(t_bytes32,t_bytes16)": {
            "label": "mapping(bytes32 => bytes16)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)13201_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "373beabb5f948345c98ddbafc909acf498afaf03ec7feff8d19696cfad4a11ba": {
      "address": "0x5fD64798A1624e4856D5de481D30D44727E9D2ee",
      "txHash": "0x2ba5a9f6c9e02b85999568d834279d11f655c0763564a2dba67254c026ccd1bd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)13201_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRCatalog",
            "label": "network",
            "type": "t_contract(XBRNetwork)9489",
            "src": "XBRCatalog.sol:48"
          },
          {
            "contract": "XBRCatalog",
            "label": "catalogSeq",
            "type": "t_uint32",
            "src": "XBRCatalog.sol:51"
          },
          {
            "contract": "XBRCatalog",
            "label": "catalogs",
            "type": "t_mapping(t_bytes16,t_struct(Catalog)11065_storage)",
            "src": "XBRCatalog.sol:54"
          },
          {
            "contract": "XBRCatalog",
            "label": "catalogIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRCatalog.sol:57"
          }
        ],
        "types": {
          "t_contract(XBRNetwork)9489": {
            "label": "contract XBRNetwork"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Catalog)11065_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Catalog)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)13201_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "64a4d434bc75de7c69fed525521db6ca3392aa90b9292308290639f4d581ae2f": {
      "address": "0xECF838070bB3C66754d91A48FF3cd112C839DF02",
      "txHash": "0x6ce90e96097e275df74ae2f4022db0677848e5d2b26817fe68d09ebd9e7f9c0a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)13201_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRMarket",
            "label": "NONCOOPERATIVE_CHANNEL_CLOSE_TIMEOUT",
            "type": "t_uint256",
            "src": "XBRMarket.sol:67"
          },
          {
            "contract": "XBRMarket",
            "label": "network",
            "type": "t_contract(XBRNetwork)9489",
            "src": "XBRMarket.sol:70"
          },
          {
            "contract": "XBRMarket",
            "label": "catalog",
            "type": "t_contract(XBRCatalog)776",
            "src": "XBRMarket.sol:73"
          },
          {
            "contract": "XBRMarket",
            "label": "marketSeq",
            "type": "t_uint32",
            "src": "XBRMarket.sol:76"
          },
          {
            "contract": "XBRMarket",
            "label": "markets",
            "type": "t_mapping(t_bytes16,t_struct(Market)11039_storage)",
            "src": "XBRMarket.sol:79"
          },
          {
            "contract": "XBRMarket",
            "label": "marketIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRMarket.sol:82"
          },
          {
            "contract": "XBRMarket",
            "label": "marketsByMaker",
            "type": "t_mapping(t_address,t_bytes16)",
            "src": "XBRMarket.sol:85"
          },
          {
            "contract": "XBRMarket",
            "label": "marketsByOwner",
            "type": "t_mapping(t_address,t_array(t_bytes16)dyn_storage)",
            "src": "XBRMarket.sol:88"
          },
          {
            "contract": "XBRMarket",
            "label": "marketsByActor",
            "type": "t_mapping(t_address,t_array(t_bytes16)dyn_storage)",
            "src": "XBRMarket.sol:91"
          },
          {
            "contract": "XBRMarket",
            "label": "memberStats",
            "type": "t_mapping(t_address,t_struct(MemberMarketStats)10961_storage)",
            "src": "XBRMarket.sol:94"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(XBRNetwork)9489": {
            "label": "contract XBRNetwork"
          },
          "t_contract(XBRCatalog)776": {
            "label": "contract XBRCatalog"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Market)11039_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Market)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_address,t_bytes16)": {
            "label": "mapping(address => bytes16)"
          },
          "t_mapping(t_address,t_array(t_bytes16)dyn_storage)": {
            "label": "mapping(address => bytes16[])"
          },
          "t_mapping(t_address,t_struct(MemberMarketStats)10961_storage)": {
            "label": "mapping(address => struct XBRTypes.MemberMarketStats)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)13201_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ae08357d0aaca4308bd3776ea56a09f406761b7fb04319c489ebdfb3fd2a710b": {
      "address": "0xBfD96cD4DbcB58736BfD2dd3300A5f376d33b271",
      "txHash": "0x727a5883e9c263af3e7f285c53ef89c403c65093d3130dca52ac7e172e66a0d0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)13201_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRChannel",
            "label": "market",
            "type": "t_contract(XBRMarket)8198",
            "src": "XBRChannel.sol:77"
          },
          {
            "contract": "XBRChannel",
            "label": "channelSeq",
            "type": "t_uint32",
            "src": "XBRChannel.sol:80"
          },
          {
            "contract": "XBRChannel",
            "label": "channels",
            "type": "t_mapping(t_bytes16,t_struct(Channel)11097_storage)",
            "src": "XBRChannel.sol:83"
          },
          {
            "contract": "XBRChannel",
            "label": "channelClosingStates",
            "type": "t_mapping(t_bytes16,t_struct(ChannelClosingState)11116_storage)",
            "src": "XBRChannel.sol:86"
          }
        ],
        "types": {
          "t_contract(XBRMarket)8198": {
            "label": "contract XBRMarket"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Channel)11097_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Channel)"
          },
          "t_mapping(t_bytes16,t_struct(ChannelClosingState)11116_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.ChannelClosingState)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)13201_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a52f24f5cea7952a7ce0c7754786a2ffab370d2e73e10f1df3db159ee9cbc8c2": {
      "address": "0x7F1cAFC08F30b0C86f9d49479308135B7C86c4e4",
      "txHash": "0x6661f7992283669c7bbb1db9fbe82f13a824dd0bd95c8f6ad696e115de0b840c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "XBRTest",
            "label": "DOMAIN_SEPARATOR",
            "type": "t_bytes32",
            "src": "XBRTest.sol:59"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5f82fee03823535ee0368c51b96cf9d348168a6fed15927316a375d86c8dcfc7": {
      "address": "0xCfEB869F69431e42cdB54A4F4f105C19C080A601",
      "txHash": "0x789c07be7749471447b603c9f41d83f2c549030dac05f401a3713939dc50331c",
      "layout": {
        "storage": [],
        "types": {}
      }
    },
    "422f7e7ec1e00407ef9d97bfb03a1231511169f06e712d1e2323b9a432e01b4a": {
      "address": "0xD833215cBcc3f914bD1C9ece3EE7BF8B14f841bb",
      "txHash": "0xd87a744184b5a57e5830c085d1aecca4d1a47c2a83e88cc4d7b0e9a2df90f9c9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "XBRToken",
            "label": "INITIAL_SUPPLY",
            "type": "t_uint256",
            "src": "XBRToken.sol:86"
          },
          {
            "contract": "XBRToken",
            "label": "burnedSignatures",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "XBRToken.sol:89"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c1a22ccf937f2d7436da8179652a912e78ac99959d97238d4a9bbf2ee6c3d50a": {
      "address": "0xe982E462b094850F12AF94d21D470e21bE9D0E9C",
      "txHash": "0x1c927128098c92042141af1b094e39d8239a4867095123bcedc1adcb736de498",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7857_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRNetwork",
            "label": "ANYADR",
            "type": "t_address",
            "src": "XBRNetwork.sol:55"
          },
          {
            "contract": "XBRNetwork",
            "label": "PRESIGNED_TXN_MAX_AGE",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:58"
          },
          {
            "contract": "XBRNetwork",
            "label": "verifyingChain",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:61"
          },
          {
            "contract": "XBRNetwork",
            "label": "verifyingContract",
            "type": "t_address",
            "src": "XBRNetwork.sol:64"
          },
          {
            "contract": "XBRNetwork",
            "label": "eula",
            "type": "t_string_storage",
            "src": "XBRNetwork.sol:67"
          },
          {
            "contract": "XBRNetwork",
            "label": "contribution",
            "type": "t_uint256",
            "src": "XBRNetwork.sol:70"
          },
          {
            "contract": "XBRNetwork",
            "label": "token",
            "type": "t_address",
            "src": "XBRNetwork.sol:75"
          },
          {
            "contract": "XBRNetwork",
            "label": "organization",
            "type": "t_address",
            "src": "XBRNetwork.sol:78"
          },
          {
            "contract": "XBRNetwork",
            "label": "members",
            "type": "t_mapping(t_address,t_struct(Member)6158_storage)",
            "src": "XBRNetwork.sol:81"
          },
          {
            "contract": "XBRNetwork",
            "label": "coins",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "XBRNetwork.sol:84"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_struct(Member)6158_storage)": {
            "label": "mapping(address => struct XBRTypes.Member)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7857_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "448c9eefd51c5ab0564be7b1f810bf6cccaa478da7c3e4f06c7bcb797cc18c07": {
      "address": "0x0290FB167208Af455bB137780163b7B7a9a10C16",
      "txHash": "0xdfeb86bf427471236bb737fefe77b741ce55cb65b9a3aad1d1a1f32394fc84f7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7857_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRDomain",
            "label": "network",
            "type": "t_contract(XBRNetwork)5317",
            "src": "XBRDomain.sol:61"
          },
          {
            "contract": "XBRDomain",
            "label": "license",
            "type": "t_string_storage",
            "src": "XBRDomain.sol:64"
          },
          {
            "contract": "XBRDomain",
            "label": "domainSeq",
            "type": "t_uint32",
            "src": "XBRDomain.sol:67"
          },
          {
            "contract": "XBRDomain",
            "label": "domains",
            "type": "t_mapping(t_bytes16,t_struct(Domain)6180_storage)",
            "src": "XBRDomain.sol:70"
          },
          {
            "contract": "XBRDomain",
            "label": "nodes",
            "type": "t_mapping(t_bytes16,t_struct(Node)6193_storage)",
            "src": "XBRDomain.sol:73"
          },
          {
            "contract": "XBRDomain",
            "label": "nodesByKey",
            "type": "t_mapping(t_bytes32,t_bytes16)",
            "src": "XBRDomain.sol:76"
          },
          {
            "contract": "XBRDomain",
            "label": "domainIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRDomain.sol:79"
          }
        ],
        "types": {
          "t_contract(XBRNetwork)5317": {
            "label": "contract XBRNetwork"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Domain)6180_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Domain)"
          },
          "t_mapping(t_bytes16,t_struct(Node)6193_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Node)"
          },
          "t_mapping(t_bytes32,t_bytes16)": {
            "label": "mapping(bytes32 => bytes16)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7857_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0ede4bc18f0795af88337e4cc87e83e72137b29582ac1c9ecdd26bcc2806d637": {
      "address": "0x67B5656d60a809915323Bf2C40A8bEF15A152e3e",
      "txHash": "0x59846e43d80fabdc6c592024138f30bf1cb774e01891bb640dade2c36bcc78eb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7857_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRCatalog",
            "label": "network",
            "type": "t_contract(XBRNetwork)5317",
            "src": "XBRCatalog.sol:46"
          },
          {
            "contract": "XBRCatalog",
            "label": "catalogSeq",
            "type": "t_uint32",
            "src": "XBRCatalog.sol:49"
          },
          {
            "contract": "XBRCatalog",
            "label": "catalogs",
            "type": "t_mapping(t_bytes16,t_struct(Catalog)6306_storage)",
            "src": "XBRCatalog.sol:52"
          },
          {
            "contract": "XBRCatalog",
            "label": "catalogIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRCatalog.sol:55"
          }
        ],
        "types": {
          "t_contract(XBRNetwork)5317": {
            "label": "contract XBRNetwork"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Catalog)6306_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Catalog)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7857_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "74b4700cbd605958a0c7ed4c597399402dc8187a837af03a5b1c9d56238c8bbf": {
      "address": "0xA57B8a5584442B467b4689F1144D269d096A3daF",
      "txHash": "0xf0a210091c798a1b85b99ea8613584a0b28028d3b4731e04c8a077f5bbcefa1b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7857_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRMarket",
            "label": "NONCOOPERATIVE_CHANNEL_CLOSE_TIMEOUT",
            "type": "t_uint256",
            "src": "XBRMarket.sol:65"
          },
          {
            "contract": "XBRMarket",
            "label": "network",
            "type": "t_contract(XBRNetwork)5317",
            "src": "XBRMarket.sol:68"
          },
          {
            "contract": "XBRMarket",
            "label": "catalog",
            "type": "t_contract(XBRCatalog)478",
            "src": "XBRMarket.sol:71"
          },
          {
            "contract": "XBRMarket",
            "label": "marketSeq",
            "type": "t_uint32",
            "src": "XBRMarket.sol:74"
          },
          {
            "contract": "XBRMarket",
            "label": "markets",
            "type": "t_mapping(t_bytes16,t_struct(Market)6280_storage)",
            "src": "XBRMarket.sol:77"
          },
          {
            "contract": "XBRMarket",
            "label": "marketIds",
            "type": "t_array(t_bytes16)dyn_storage",
            "src": "XBRMarket.sol:80"
          },
          {
            "contract": "XBRMarket",
            "label": "marketsByMaker",
            "type": "t_mapping(t_address,t_bytes16)",
            "src": "XBRMarket.sol:83"
          },
          {
            "contract": "XBRMarket",
            "label": "marketsByOwner",
            "type": "t_mapping(t_address,t_array(t_bytes16)dyn_storage)",
            "src": "XBRMarket.sol:86"
          },
          {
            "contract": "XBRMarket",
            "label": "marketsByActor",
            "type": "t_mapping(t_address,t_array(t_bytes16)dyn_storage)",
            "src": "XBRMarket.sol:89"
          },
          {
            "contract": "XBRMarket",
            "label": "memberStats",
            "type": "t_mapping(t_address,t_struct(MemberMarketStats)6202_storage)",
            "src": "XBRMarket.sol:92"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(XBRNetwork)5317": {
            "label": "contract XBRNetwork"
          },
          "t_contract(XBRCatalog)478": {
            "label": "contract XBRCatalog"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Market)6280_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Market)"
          },
          "t_array(t_bytes16)dyn_storage": {
            "label": "bytes16[]"
          },
          "t_mapping(t_address,t_bytes16)": {
            "label": "mapping(address => bytes16)"
          },
          "t_mapping(t_address,t_array(t_bytes16)dyn_storage)": {
            "label": "mapping(address => bytes16[])"
          },
          "t_mapping(t_address,t_struct(MemberMarketStats)6202_storage)": {
            "label": "mapping(address => struct XBRTypes.MemberMarketStats)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7857_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0bcaf7f2553d3bca3d0721034e453fa3bec20241906d5b9c0a4b564588b4b1e1": {
      "address": "0x630589690929E9cdEFDeF0734717a9eF3Ec7Fcfe",
      "txHash": "0x0e69446a0e5096c6afde39b9e664ac3a81b09e8fd0f05b28bfbbefe86704f85a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7857_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "XBRChannel",
            "label": "market",
            "type": "t_contract(XBRMarket)4652",
            "src": "XBRChannel.sol:75"
          },
          {
            "contract": "XBRChannel",
            "label": "channelSeq",
            "type": "t_uint32",
            "src": "XBRChannel.sol:78"
          },
          {
            "contract": "XBRChannel",
            "label": "channels",
            "type": "t_mapping(t_bytes16,t_struct(Channel)6338_storage)",
            "src": "XBRChannel.sol:81"
          },
          {
            "contract": "XBRChannel",
            "label": "channelClosingStates",
            "type": "t_mapping(t_bytes16,t_struct(ChannelClosingState)6357_storage)",
            "src": "XBRChannel.sol:84"
          }
        ],
        "types": {
          "t_contract(XBRMarket)4652": {
            "label": "contract XBRMarket"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes16,t_struct(Channel)6338_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.Channel)"
          },
          "t_mapping(t_bytes16,t_struct(ChannelClosingState)6357_storage)": {
            "label": "mapping(bytes16 => struct XBRTypes.ChannelClosingState)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7857_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0x254dffcd3277C0b1660F6d42EFbB754edaBAbC2B",
    "txHash": "0x5e0d62ebb39b5e8e2e2c5a63a590068d8c9d7396fa3424a608ced8a68358bdef"
  }
}
