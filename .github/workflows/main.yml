# GitHub actions for XBR Protocol CI/CD
# https://github.com/crossbario/xbr-protocol/actions
#
# See also:
#
#   * https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
#   * https://github.com/actions/starter-workflows/blob/main/ci/python-package.yml
#
name: main

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  check:
    runs-on: ubuntu-20.04

    env:
      XBR_HDWALLET_SEED: ${{ secrets.XBR_HDWALLET_SEED }}

    steps:
    - uses: actions/checkout@v2

    # https://github.com/actions/setup-node
    - name: Set up Node
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Set up Python 3
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        architecture: 'x64'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox

    - name: Install Node dependencies
      run: |
        npm install --only=dev

    # https://www.scivision.dev/github-actions-path-append/
    # https://github.com/actions/toolkit/blob/main/docs/commands.md#path-manipulation
    # https://docs.github.com/en/free-pro-team@latest/actions/reference/environment-variables#default-environment-variables
    - name: Set environment
      run: |
        echo "${HOME}/.local/bin" >> $GITHUB_PATH
        echo "${GITHUB_WORKSPACE}/node_modules/.bin" >> $GITHUB_PATH
        echo BUILD_DATE=`date --utc "+%Y%m%d"` >> $GITHUB_ENV
        echo XBR_PROTOCOL_VERSION=`grep '"version":' ./package.json -m1 | cut -d\" -f4` >> $GITHUB_ENV
        echo XBR_PROTOCOL_VCS_REF=`git --git-dir="./.git" rev-list -n 1 v${XBR_PROTOCOL_VERSION} --abbrev-commit` >> $GITHUB_ENV

    - name: Print environment
      run: |
        echo ""
        echo "Build environment configured:"
        echo ""
        echo "  PATH                    = ${PATH}"
        echo "  BUILD_DATE              = ${BUILD_DATE}"
        echo "  XBR_PROTOCOL_VERSION    = ${XBR_PROTOCOL_VERSION}"
        echo "  XBR_PROTOCOL_VCS_REF    = ${XBR_PROTOCOL_VCS_REF}"
        echo ""
        which python
        python -V
        which node
        node --version
        which truffle
        truffle version
        which ganache-cli
        ganache-cli --version
        which solhint
        solhint --version

    - name: Run Solhint
      run: tox -c tox.ini -e solhint

    - name: Run Truffle build
      run: tox -c tox.ini -e truffle-build

    # https://docs.github.com/en/free-pro-team@latest/actions/reference/encrypted-secrets#using-encrypted-secrets-in-a-workflow
    - name: Run Truffle test
      run: |
        ganache-cli --accounts 15 --defaultBalanceEther 1000 \
          --mnemonic "$XBR_HDWALLET_SEED" \
          --gasLimit 0xfffffffffff --gasPrice 1 --port 1545 --networkId 5777 &
        sleep 5
        truffle migrate --reset --network ganache
        tox -c tox.ini -e truffle-test

    - name: Build Python package
      run: |
        make compile
        python setup.py sdist bdist_wheel --universal

    # FIXME: sth is broken rgd keys when run under "coverage" ..
    # - name: Run Coverage
    #   run: tox -c tox.ini -e coverage

  docs:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2

    - name: Install OS dependencies
      run: |
        sudo apt update
        sudo apt install libenchant-dev

    - name: Set up Python 3
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        architecture: 'x64'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt

    - name: Set environment
      run: |
        echo XBR_PROTOCOL_VERSION=`grep '"version":' ./package.json -m1 | cut -d\" -f4` >> $GITHUB_ENV
        echo XBR_PROTOCOL_VCS_REF=`git --git-dir="./.git" rev-list -n 1 v${XBR_PROTOCOL_VERSION} --abbrev-commit` >> $GITHUB_ENV

    - name: Print environment
      run: |
        echo ""
        echo "Environment configured:"
        echo ""
        echo "  XBR_PROTOCOL_VERSION    = ${XBR_PROTOCOL_VERSION}"
        echo "  XBR_PROTOCOL_VCS_REF    = ${XBR_PROTOCOL_VCS_REF}"
        echo ""

    - name: Run Sphinx
      run: tox -c tox.ini -e sphinx
